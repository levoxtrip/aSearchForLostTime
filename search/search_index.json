{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"List of Content","text":"<p>Programming</p> <p>TouchDesigner</p> <p>Python</p> <p>VVVV</p> <p>Unity</p>"},{"location":"ART/","title":"Art","text":"<p>Artist for inspiration</p>"},{"location":"ART/ArtistForInspiration/","title":"Artist For Inspiration","text":"<p>Abstrakt</p> <p>Howard Mehring https://www.wikiart.org/en/howard-mehring</p> <p>Hilma af Klint https://www.wikiart.org/de/hilma-af-klint</p> <p>Paul Reed https://www.wikiart.org/en/paul-reed</p> <p>Otto Freundlich https://www.wikiart.org/en/otto-freundlich</p> <p>Hans Hofmann https://www.wikiart.org/en/hans-hofmann</p> <p>Gunther Gerzso https://www.wikiart.org/en/gunther-gerzso</p> <p>Sa Nogueira https://www.wikiart.org/en/sa-nogueira</p> <p>Eileen Agar https://www.wikiart.org/en/eileen-agar</p> <p>Jean Metzinger https://www.wikiart.org/en/jean-metzinger</p> <p>Stefan Sevastre https://www.wikiart.org/en/stefan-sevastre</p> <p>Karl Benjamin https://www.wikiart.org/en/karl-benjamin</p> <p>Jean Paul Jerome https://www.wikiart.org/en/jean-paul-jerome</p> <p>Vieira da Silva https://www.wikiart.org/en/maria-helena-vieira-da-silva</p> <p>Oswaldo Vigas https://www.wikiart.org/de/oswaldo-vigas</p> <p>Carlos Merida https://www.wikiart.org/en/carlos-merida</p> <p>Ronald Davis https://www.wikiart.org/en/ronald-davis</p> <p>Frederick Hammersley https://www.wikiart.org/de/frederick-hammersley</p> <p>Hugette Arthur Bertrand https://www.wikiart.org/en/huguette-arthur-bertrand</p> <p>Richard Mortensen https://www.wikiart.org/en/richard-mortensen</p> <p>Takamatsu Jiro https://www.wikiart.org/en/takamatsu-jiro</p> <p>Jean Helion https://www.wikiart.org/en/jean-helion</p> <p>Ay O https://www.wikiart.org/en/ay-o</p> <p>Eduardo Nery https://www.wikiart.org/en/eduardo-nery</p> <p>Gunther Gerso https://www.wikiart.org/en/gunther-gerzso</p> <p>Harriet Korman https://www.wikiart.org/en/harriet-korman</p> <p>Stefan Sevastre https://www.wikiart.org/en/stefan-sevastre</p> <p>Adolf H\u00f6lzel https://artvee.com/artist/adolf-holzel/</p> <p>Lyubov Popova https://www.wikiart.org/en/lyubov-popova</p> <p>Al Held https://www.wikiart.org/en/al-held</p> <p>Kenzo Okada https://www.wikiart.org/en/kenzo-okada/</p> <p>Sadamasa Motonaga https://www.wikiart.org/en/sadamasa-motonaga</p> <p>Kubismus</p> <p>Gosta Nilsson https://www.wikiart.org/en/gosta-adrian-nilsson</p> <p>Orphismus</p> <p>Frantisek Kupka https://www.wikiart.org/de/frantisek-kupka</p> <p>Art Brut</p> <p>Gaston chaissac https://www.wikiart.org/en/gaston-chaissac</p> <p>Expressionismus</p> <p>Oswaldo Guayasamin https://www.wikiart.org/de/oswaldo-guayasamin</p> <p>Von Jawlenksky https://www.wikiart.org/en/alexej-von-jawlensky</p> <p>Fritz Stuckenberg https://artvee.com/artist/fritz-stuckenberg/</p> <p>Leon Berkowitz https://www.wikiart.org/en/leon-berkowitz</p> <p>Paula Modersohn-Becker https://www.wikiart.org/de/paula-modersohn-becker</p> <p>Panayiotis Tetsis https://www.wikiart.org/en/panayiotis-tetsis</p> <p>Surrealism</p> <p>Piroska Szanto https://www.wikiart.org/en/piroska-szanto</p> <p>Arnold Peter Weisz-Kub\u00edn\u010dan https://artvee.com/artist/arnold-peter-weisz-kubincan/</p> <p>Christian Rohlfs https://artvee.com/artist/christian-rohlfs/</p> <p>Erik Harry Johannessen https://artvee.com/artist/erik-harry-johannessen/</p> <p>Dada</p> <p>Hannah hoch https://www.wikiart.org/en/hannah-hoch</p> <p>Kurt Schwitters https://www.wikiart.org/en/kurt-schwitters</p> <p>Kinetic/Op Art</p> <p>Horacio Garcia Rossi https://www.wikiart.org/en/horacio-garcia-rossi</p> <p>Ludwig Wilding https://www.wikiart.org/en/ludwig-wilding</p> <p>Rubem Ludolf https://www.wikiart.org/en/rubem-ludolf</p> <p>Francois Morellet https://www.wikiart.org/en/francois-morellet</p> <p>Adolf Fleischmann https://www.wikiart.org/en/adolf-fleischmann</p> <p>Mario Ballocco https://www.wikiart.org/en/mario-ballocco</p> <p>Bruno munari polaroid</p> <p>Heinz Mack https://www.wikiart.org/en/heinz-mack</p> <p>Lothar Charoux https://www.wikiart.org/en/lothar-charoux</p> <p>Julian Stanczak https://www.wikiart.org/en/julian-stanczak </p> <p>Luis sacilotto https://www.wikiart.org/en/luis-sacilotto</p> <p>Pol Bury</p> <p>Grafik design</p> <p>Franco Grignani https://www.grapheine.com/en/history-of-graphic-design/graphic-designer-franco-grignani</p> <p>Lightart</p> <p>Leo Villareal https://www.wikiart.org/de/leo-villareal</p> <p>Skulpture</p> <p>Tony Smith https://www.wikiart.org/en/tony-smith</p> <p>Heinz Mack https://www.wikiart.org/en/heinz-mack</p> <p>Nancy Graves https://www.wikiart.org/en/nancy-graves</p> <p>Ruth Vollmer https://www.wikiart.org/en/ruth-vollmer</p> <p>Lygia Clark https://www.wikiart.org/en/lygia-clark/</p> <p>Philip King https://www.wikiart.org/de/phillip-king</p> <p>Robert Morris https://www.wikiart.org/en/robert-morris</p> <p>John Mccracken https://www.wikiart.org/en/john-mccracken</p> <p>Jacques Lipchitz</p> <p>antoine pevsner</p> <p>Fotografie</p> <p>heinz hajek-halke</p> <p>Installation</p> <p>Daniel Buren</p> <p>Konstruktivismus</p> <p>Olga Rozanova https://www.wikiart.org/en/olga-rozanova</p> <p>Janos Mattis Teutsch https://www.wikiart.org/en/janos-mattis-teutsch</p> <p>Lyubov Popova https://www.wikiart.org/en/lyubov-popova</p> <p>Impressionismus Cuno Amiet https://www.wikiart.org/en/cuno-amiet/sunspots-1904</p> <p>Installation</p> <p>https://www.wikiart.org/en/paintings-by-genre/installation#!#filterName:all-works,viewType:masonry</p> <p>Dan Flavin https://www.wikiart.org/en/dan-flavin</p> <p>Doug Wheeler https://www.wikiart.org/en/doug-wheeler</p> <p>Larry Bell https://www.wikiart.org/en/larry-bell</p> <p>Fusun Onur https://www.wikiart.org/en/fusun-onur</p> <p>Primitive Art</p> <p>Maria Primachenko https://www.wikiart.org/en/maria-primachenko</p> <p>Sonstige</p> <p>Karl Wiener https://artvee.com/artist/karl-wiener/</p> <p>Mikul\u00e1\u0161 Galanda https://artvee.com/artist/mikulas-galanda/</p> <p>Vladimir Dimitrov https://www.wikiart.org/en/vladimir-dimitrov</p> <p>SOPHIE TAEUBER-ARP</p> <p>Vera Molnar</p> <p>lucas samaras</p> <p>Vasile dobrian</p> <p>Jesus Rafael sotohttp://www.artnet.de/k%C3%BCnstler/jes%C3%BAs-rafael-soto/</p> <p>jacoov agam</p> <p>pol bury kinetic sculpture</p>","tags":["ART","EXPERIENCE"]},{"location":"ART-PROJECTS/Experiences/","title":"Experiences","text":"<p>The most memorable experiences in a person\u2019s life are filled with color, yes, but more than that, they are linked to the sounds, smells, textures and feelings of these moments.</p>","tags":["ART","EXPERIENCE"]},{"location":"ART-PROJECTS/Experiences/#attributes","title":"Attributes","text":"<ul> <li>Emotion</li> <li>Excitement </li> <li>Involvement </li> <li>Interactive </li> <li>Information </li> </ul>","tags":["ART","EXPERIENCE"]},{"location":"ART-PROJECTS/Interactions/","title":"Interactions","text":"<ul> <li>Punch something</li> <li> <p>Move body</p> </li> <li> <p>Initiate/destroy things/objects</p> </li> <li>move things</li> <li>move things depending on persons own position</li> <li>Objects follow a person</li> <li>Person moves into a trigger zone</li> <li>Distance from person to object</li> <li>Audio reactive</li> </ul>","tags":["ART","INTERACTION"]},{"location":"ART-PROJECTS/artisticTechnique/","title":"Creative Techniques","text":"<ul> <li> <p>Can you put the topic into a different time context?</p> </li> <li> <p>What is the discrepancy between topic 1 and topic 2</p> </li> <li> <p>Documenting places that don't exist anymore</p> </li> <li> <p>Eliptical narrative</p> </li> </ul>"},{"location":"ART-PROJECTS/artisticTechnique/#materials","title":"Materials","text":"<p>Can I use an old/wasteful material and upcycle it to convey my idea?</p>"},{"location":"P5JS/","title":"P5.JS","text":"<p>Slider</p>","tags":["P5JS"]},{"location":"P5JS/Slider/","title":"Slider","text":"<pre><code>var slider\nslider = createSlider(min,max,defaultval,stepsize)\nvariable = slider.value()\n</code></pre>","tags":["JAVASCRIPT","P5JS"]},{"location":"PROGRAMMING/","title":"Programming","text":"<p>General Rules</p>","tags":["PROGRAMMING"]},{"location":"PROGRAMMING/GeneralRules/","title":"General Rules","text":"<ul> <li> <p>Break down the functionality of the program or installation in as small steps as possible</p> </li> <li> <p>Execute each step and then directly test it.</p> </li> <li> <p>If you can't solve a problem for 45 minutes straight - step away, go for a walk, clean dishes - come back later to the problem.</p> </li> </ul>","tags":["ART","PROGRAMMING"]},{"location":"PROGRAMMING/ProblemSolving/","title":"Problem solving","text":"<ul> <li>Read problem</li> <li>Write guess what the solution is gonna be</li> <li>Write down steps what to do</li> </ul>","tags":["ART","PROGRAMMING"]},{"location":"PYTHON/","title":"Python","text":"<p>Basics</p>"},{"location":"PYTHON/Basics/","title":"Basics","text":"<p>In Python the indentation of code is important. Everything that is indented on the same level belongs to a block.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#variables","title":"Variables","text":"<p>Variables store values.</p> <p><pre><code>name = \"me\"\nage = 39\n</code></pre> Variables can't start with a number and can't have character like <code>%</code> or <code>!</code>.</p> <p>We also can't use python keywords like <code>if,for,while...</code> </p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#expressions-and-statements","title":"Expressions and Statements","text":"<p>Expression is any code that returns a value. <code>1+1</code></p> <p>A statement is an operation on a value - we are doing something with the value. <code>print(1+1)</code></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#comments","title":"Comments","text":"<p>Everything after <code>#</code> is ignored and can be used as comment <code># This is a comment</code></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#data-types","title":"Data types","text":"<p>string - <code>name = \"hans\"</code></p> <p>integer - <code>age = 2</code></p> <p>float - <code>temp = 2.9</code></p> <p>boolean - <code>isEven = True</code></p> <p>We can check what data type a variable has  with <code>type()</code>.</p> <p>Python automatically detects type of variables.</p> <p>To check if something is of type string <pre><code>name = \"hans\"\ntype(name) == str\n\n#or\n\nisinstance(name,str)\n</code></pre></p> <p>To convert int into float we can use the class-constructor of the datatype class <code>temp = float(2)</code></p> <p><code>age = int(\"20\")</code> -&gt; becomes an int</p> <p>The conversion is called casting</p> <p>If these conversions fail we actually get an error in the console.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#operators","title":"Operators","text":"<p>assignment operator <code>=</code> - assigns a value to a variable</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#arithmetic-operators","title":"Arithmetic operators","text":"<pre><code>+ #addition\n- #subtraction\n* #multiplication\n/ #division\n% #remainder\n** #squared\n// #floor division - does the division and rounds down to the nearet whole number\n</code></pre> <p>We can combine arithmetic with assignment operator</p> <p><code>+=</code>, <code>*=</code> ...  <code>age += 8</code> -&gt; <code>age = age +8</code></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#comparison-operation","title":"Comparison operation","text":"<pre><code>a == b #- Equal\na != b  #- Not equal\na &gt; b  #- Greater\na &lt; b #- Smaller\n</code></pre>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#boolean-operators","title":"Boolean operators","text":"<pre><code>not - #True when false\nand - # both conditions have to be true\nor - # one of the conditions have to be true\n</code></pre> <p><code>or</code> returns the first not false value otherwise it returns the last operand</p> <pre><code>print(False or 'hey') # -&gt; 'hey'\nprint(True or 'hey') # -&gt; True\nprint(1 or 0) # -&gt; 1\n</code></pre> <p><code>and</code> only evaluates the second argument if the first is true. If the first argument is falsy it returns that argument - otherwise it evaluates the seconds argument.</p> <pre><code>print(0 and 1) # -&gt; 0\nprint(False and 'hey') # -&gt; False\nprint('hey' and 'hi') # -&gt; hi\n</code></pre>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#bitwise-operators","title":"Bitwise operators","text":"<pre><code>&amp; # performs binary AND\n| # performs binary OR\n^ # performs binary XOR\n~ # performs binary NOT\n&lt;&lt; # shift left operation\n&gt;&gt; # shift right operation\n</code></pre>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#isin-operators","title":"is/in operators","text":"<p><code>is</code> is used to compare objects and returns true if both are the same object</p> <p><code>in</code> is membership operator - if value is contained in list or other sequence.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#ternary-operator","title":"Ternary operator","text":"<p>If-Else in one line. Allows to quickly define a conditional <code>return True if age &gt; 18 else False</code></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#strings","title":"Strings","text":"<p>Strings are a series of characters <pre><code>\"hallo\"\n'hallo'\n</code></pre> We can combine/concatenate strings with <code>+</code> <code>'hallo'+'world'</code></p> <p>For multiline string we use three <pre><code>\"\"\"My\nname\nis\n\"\"\"\n</code></pre></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#string-methods","title":"String Methods","text":"<p><code>.upper()</code> converts string into all capital letters <code>.lower()</code> converts string into all lower letters <code>.title()</code> makes first letter of each string capital</p> <p>To evaluate strings <code>.islower()</code> <code>.isupper()</code> <code>.isalpha()</code> check if string contains only characters and is not empty <code>.isalnum()</code> check if string contains characters or digits and is not empty <code>.isdecimal()</code> check if string contains digits and is not empty <code>.startswith()</code>/<code>.endswidth()</code> check if string starts/ends with substring <code>.replace()</code> to replace part of string <code>.split()</code> split string or specific character separator <code>.strip()</code> trim white space from a string <code>.join()</code> append new letters to a string <code>.find()</code> find position of substring. </p> <p>All these methods return the new modified string. It's not changing anything in the original string.</p> <p>We also can use global functions on strings. <code>len()</code> - get amount of character of string <code>in</code> <pre><code>\"AU\" in \"BEAU\" # -&gt; TRUE\n</code></pre></p> <p>If we want to show <code>\"</code> character in a string we need to add a backslash <code>\\</code></p> <p><code>\"He\\\"llo\"</code></p> <p>The backslash is also used to add a new line into a string <code>\"Hello\\n World\"</code></p> <p>To get a specific character from a string <code>name[1]</code> - character at index 1 <code>name[-1]</code> - character at the end</p> <p>To get a range we do slicing <pre><code>name = \"ABCDEF\"\nname[1:3] # -&gt; \"BC\" - It stops before second index 3\nname[1:] # -&gt; \"BCDEF\" - Blank means it goes to the end or beginning\nname[:3] # -&gt; \"AB\"\n</code></pre></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#booleans","title":"Booleans","text":"<p>Booleans are <code>True</code> or <code>False</code> values. <code>done = True</code></p> <p>Numbers always return <code>True</code> exept <code>0</code>. Even negative numbers.</p> <pre><code>if 10: # &lt;- True\n    print(\"yes\")\n</code></pre> <p>Strings are only <code>False</code> when they are empty</p> <p>To check if type of value is boolean <code>type(value) == bool</code></p> <p>The <code>any()</code> functions returns <code>True</code> if any element of an iterable like a List is <code>True</code>. <code>any([True,False])</code> -&gt; True</p> <p><code>all()</code> function returns <code>True</code> if all elements of an iterable are <code>True</code>.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#number-datatype","title":"Number datatype","text":"<p>Number datatype allows to create the mathematical complex number <code>complex = 2+3j</code> or <code>num = complex(2,3)</code></p> <p>To get the complex or real part of the complex number <code>num.real</code> <code>num.imag</code></p> <p><code>abs(-5.5)</code> - To get the absolut value of a number  <code>round(5.5)</code> - round to nearest integer <code>round(5.5,1)</code> - round to nearest decimal point.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#enums","title":"Enums","text":"<p>Enums are readable names that are bound to constant values. To use Enums we have to import them. <pre><code>from enum import Enum\n\nclass MyState(Enum):\n    INACTIVE = 0\n    ACTIVE = 1\n\n\nprint(State.INACTIVE)\nprint(STATE.ACTIVE.value)\n</code></pre> Enums are the only way to create constants in Python.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#user-input","title":"User Input","text":"<p>To get the input from the user at runtime we can use <code>input(\"prompt\")</code>. Execution will be stopped till the user made an input and hits Enter key.</p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#control-statements","title":"Control statements","text":"","tags":["PYTHON"]},{"location":"PYTHON/Basics/#if-statement","title":"if statement","text":"<pre><code>if condition == True:\n    #Execute this\n</code></pre>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#if-else-statement","title":"if-else statement","text":"<pre><code>if condiation == True:\n    # Execute if condition is true\nelse:\n    #Execute if condition is false\n</code></pre>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#multiple-condition-checks","title":"Multiple condition checks","text":"<p>For multiple condition checks we can use <code>elif</code> <pre><code>if condition1 == True:\n    #Execute this\nelif condition2 == True:\n    #Execute that\nelif condition3 == True:\n    #Execute this\n#...\nelse:\n    #if all the others are false\n</code></pre></p>","tags":["PYTHON"]},{"location":"PYTHON/Basics/#lists","title":"Lists","text":"<p>List are an essential data structure in Python. It allows to hold different datatypes <code>dogs = [\"Horse\",\"Jim\",3]</code></p> <p>With <code>in</code> operator we can check if an item is inside a list <code>print(\"Jim\" in dogs)</code> -&gt; True</p> <p>To define an empty list  <code>emptyList = []</code></p> <p>To reference items from lists we can use the index <code>element0 = dogs[0]</code></p> <p>To pick from the end of the list we use <code>-</code> <code>lastElement = dogs[-1]</code> <code>secondToLast = dogs[-2]</code></p> <p>To update an item in a list  <code>dogs[2] = \"hans\"</code></p> <p>To extract parts of the list we can use slicing <code>firstTwoElements = dogs[:2]</code> This returns a slice of the list</p> <p><code>len(dogs)</code> counts how many elements a list has.</p> <p>To add items to a list we can use the <code>.append()</code> method. <code>dogs.append(\"Ruff\")</code></p> <p>To combine two lists together we can use <code>.extend()</code> <code>allDogs = dogs.extend(['hallo',\"Ruofo\",True])</code></p> <p>Another way is to use <code>+=</code> <code>dogs += [\"freaky\",23]</code></p>","tags":["PYTHON"]},{"location":"TD/","title":"TouchDesigner","text":"<p>TOPs</p> <p>CHOPs</p> <p>COMPs</p> <p>DATs</p> <p>SCRIPTING</p> <p>SOP</p> <p>Interesting Links</p> <p>UI</p>"},{"location":"TD/InterestingLinks/","title":"Interesting Links","text":"<p>TD Yolo</p>"},{"location":"TD/CHOP/","title":"CHOP","text":"<p>Add Channels after each other into a Sequence</p> <p>Animate Through Data Points</p> <p>Assure CHOP Values Stay in Range</p> <p>Combining Channels in PatternCHOP</p> <p>Convert Negative Values Into Positive</p> <p>Convert TOP data to Channel Data</p> <p>Define How Long CountCHOP Can't Be Retriggered</p> <p>Delete Samples Beginning End Of CHOP</p> <p>Detect How Fast Value Changes</p> <p>Hold last changed value</p> <p>Let Value Slowly Decrease</p> <p>LagCHOP</p> <p>Only Track Mouse Values In Window</p> <p>Step CHOP Values With LimitCHOP</p> <p>Switch Between CHOPs</p>"},{"location":"TD/CHOP/AddChannelsIntoSequenz/","title":"AddChannelsIntoSequenz","text":"","tags":["TD/CHOPS","TouchDesigner"]},{"location":"TD/CHOP/AddChannelsIntoSequenz/#add-channels-after-each-other-into-a-sequence","title":"Add Channels after each other into a Sequence","text":"<p>If you have multiple channels that you want to line up after each other into on Sequence we can use the <code>ShuffleCHOP</code> where we set the Method to <code>Sequence Channels by Name</code> which will combine the channels into <code>chan1-chan2-chan3-chan4-chan5...</code>.</p> <p>Download</p>","tags":["TD/CHOPS","TouchDesigner"]},{"location":"TD/CHOP/AnimateThroughDataPoints/","title":"AnimateThroughDataPoints","text":"","tags":["TD/CHOPS","TouchDesigner","DataViz"]},{"location":"TD/CHOP/AnimateThroughDataPoints/#animate-through-graphs-of-data-points","title":"Animate Through Graphs of Data Points","text":"<p>Animating through graphs of datapoints in TouchDesigner allows us to visualize complex data in a dynamic and interactive way, helping to uncover patterns, trends, and insights that static representations may not reveal. Steps to follow: - Add Table data and convert to CHOP Data:</p> <p></p> <ul> <li>Add <code>ConstantCHOP</code> and <code>SpeedCHOP</code> to control how was to go through Data.</li> </ul> <p></p> <ul> <li>Connect <code>SpeedCHOP</code> to <code>LookupCHOP</code> and limit speed to loop through data</li> </ul> <p></p> <p>DownloadFile</p>","tags":["TD/CHOPS","TouchDesigner","DataViz"]},{"location":"TD/CHOP/AssureCHOPValuesStayInRange/","title":"AssureCHOPValuesStayInRange","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/AssureCHOPValuesStayInRange/#assure-chop-values-stay-in-range","title":"Assure CHOP Values Stay In Range","text":"<p>The <code>LimitCHOP</code> allows us to define in which range the Input values get passed through and what happens when the values are higher or lower.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/CombingChannelsPatternCHOP/","title":"CombingChannelsPatternCHOP","text":"","tags":["TD/CHOPS","TD/PATTERN","TouchDesigner"]},{"location":"TD/CHOP/CombingChannelsPatternCHOP/#combining-channels-in-patternchop","title":"Combining Channels in PatternCHOP","text":"<p>A <code>PatternCHOP</code> has an input for a <code>Source Input</code> which we can use to combine a Pattern with the input data. For that we can decide under the <code>Channel</code> tab how we want to combine the input with the Pattern. </p>","tags":["TD/CHOPS","TD/PATTERN","TouchDesigner"]},{"location":"TD/CHOP/ConvertNegativeValuesIntoPositive/","title":"ConvertNegativeValuesIntoPositive","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/ConvertNegativeValuesIntoPositive/#convert-negative-values-into-positives","title":"Convert Negative Values Into Positives","text":"<p>We can use a <code>LimitCHOP</code> to convert all negative values into positive ones by setting Positive parameter to <code>On</code>.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/ConvertTOPDataChannelData/","title":"ConvertTOPDataChannelData","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/ConvertTOPDataChannelData/#convert-top-data-to-channel-data","title":"Convert TOP data to Channel Data","text":"<p>When we want to convert an image that we have in TOP land into channel data we use a <code>TOPtoCHOP</code> and under <code>Crop</code> tab we select <code>Full Image</code>. This gives us a lot of channels. We want to group these channels together with a <code>ShuffleCHOP</code> and use the Method <code>Select Channels By Name</code></p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/DefineHowCountCHOPCantRetrigger/","title":"DefineHowCountCHOPCantRetrigger","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/DefineHowCountCHOPCantRetrigger/#define-how-long-countchop-cant-be-retriggered","title":"Define How Long CountCHOP Can't Be Retriggered","text":"<p>The <code>CountCHOP</code> has the Re-Trigger Delay parameter that allows us to define for how long trigger signals get ignored, after the initial trigger happened.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/DeleteSamplesBeginningEndCHOP/","title":"DeleteSamplesBeginningEndCHOP","text":"","tags":["TD/CHOPS","TouchDesigner"]},{"location":"TD/CHOP/DeleteSamplesBeginningEndCHOP/#deleting-samples-at-the-beginning-or-end-of-chop","title":"Deleting samples at the beginning or end of chop","text":"<p>Sometimes you want to delete certain parts of a chop. For example when you have an <code>AudiospectrumCHOP</code> that doesn't really provide useful data at the edges we can use a <code>trimCHOP</code> to delete certain numbers of samples at the outer edges. For that we set unit values to <code>Relative Start/End</code> and discard <code>Exterior</code>. From there you can set the amount of samples you want delete in Start and End. Be aware that if you want to delete 100 from the end the value has to be <code>-100</code>.</p> <p>DownloadFile</p>","tags":["TD/CHOPS","TouchDesigner"]},{"location":"TD/CHOP/DetectHowFastValueChanges/","title":"DetectHowFastValueChanges","text":"","tags":["TD/CHOP","TouchDesigner","TD/SENSORS"]},{"location":"TD/CHOP/DetectHowFastValueChanges/#detect-how-fast-value-changes","title":"Detect How Fast Value Changes","text":"<p>We can use a <code>SlopeCHOP</code> to detect how fast the input value is changing and then use a <code>LogicCHOP</code> to execute some behavior when the change reaches certain value.</p> <p>DownloadFile</p>","tags":["TD/CHOP","TouchDesigner","TD/SENSORS"]},{"location":"TD/CHOP/ExtractParameterFromOPintoCHOP/","title":"ExtractParameterFromOPintoCHOP","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/ExtractParameterFromOPintoCHOP/#get-operator-parameter-as-chop","title":"Get Operator Parameter as CHOP","text":"<p>You can use a <code>ParameterCHOP</code> to get the values of parameters of different operator types.</p> <p>To get the Build In parameters make sure to toggle that because it's not the standard setting.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/HoldLastChangedValue/","title":"HoldLastChangedValue","text":"","tags":["TD/CHOPS","TouchDesigner"]},{"location":"TD/CHOP/HoldLastChangedValue/#hold-last-changed-value","title":"Hold last changed value","text":"<p>Often it is super useful to hold the last changed value till a new change happens. This is easily made with a <code>overwriteCHOP</code>.</p> <p>Just change the constant values in the example to understand.</p> <p>Download </p>","tags":["TD/CHOPS","TouchDesigner"]},{"location":"TD/CHOP/LagCHOP/","title":"LagCHOP","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/LagCHOP/#lagchop","title":"LagCHOP","text":"<p>The <code>LagCHOP</code> applies a lag to the input channel to slow down rapid changes of the input channel. The two <code>lag</code> parameters define how much lag on the up movement and the down movement of a channel value is applied.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/LetValueSlowlyDecrease/","title":"LetValueSlowlyDecrease","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/LetValueSlowlyDecrease/#let-value-slowly-decrease","title":"Let Value Slowly Decrease","text":"<p>To let a value, that for example gets pulsed, decrease over a defined time we can use a <code>LagCHOP</code>and set first Lag to <code>0</code> and the second one to the desired time.</p> <p>Download Example File</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/OneOutputTriggerLogicCHOP/","title":"OneOutputTriggerLogicCHOP","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/OneOutputTriggerLogicCHOP/#one-output-from-trigger-logicchop","title":"One Output From Trigger LogicCHOP","text":"<p>Sometimes we run into situations where we want to trigger something when one or the other input of a <code>LogicCHOP</code> is outside the bounds. In the <code>LogicCHOP</code> we set Combine CHOPs to <code>Or</code>.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/OnlyTrackMouseValuesInWindow/","title":"OnlyTrackMouseValuesInWindow","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/OnlyTrackMouseValuesInWindow/#only-track-mouse-values-in-windowcomp","title":"Only Track Mouse Values In WindowCOMP","text":"<p>If you want that <code>MouseCHOP</code> ignores your mouse position in the node view and only registers your mouse movement on a window you can specify the <code>Panels</code> in the <code>MouseCHOP</code>. Set this to your project name. </p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/ReorderCHOP/","title":"Reorder Channels in CHOP","text":"<p>The <code>ReorderCHOP</code> has different operations to order the Channels to our needs.</p> <p> Base Name Sort - Sorts the Channels by their alphabetical name.</p> <p>Number Suffix Sort - Sorts the Channels by the number of their index at the end.</p> <p>Random - Allows to create a random order of the channels.</p> <p> Every Nth Channel - Allows to pick every nth channel and sorts them one after the other.</p> <p>Download Example File</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/StepCHOPValuesWithLimitCHOP/","title":"StepCHOPValuesWithLimitCHOP","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/StepCHOPValuesWithLimitCHOP/#step-chop-values-with-limitchop","title":"Step CHOP Values With LimitCHOP","text":"<p>If we want that our CHOP values are stepped we can use a <code>LimitCHOP</code>, set Quantize Values and define what steps we want to use.</p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/SwitchBetweenCHOPS/","title":"SwitchBetweenCHOPS","text":"","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/CHOP/SwitchBetweenCHOPS/#switch-between-chops","title":"Switch Between CHOPS","text":"<p>A <code>CrossCHOP</code> allows us to switch between CHOP operators. </p>","tags":["TD/CHOP","TouchDesigner"]},{"location":"TD/COMMUNICATION/NetworkCommunication/","title":"network Communication","text":"<p>With <code>TouchOut</code> we can communicate between networks and machines - We can send TOP,CHOP,DAT data. This allows us to send data from one TouchDesigner patch to another TouchDesigner patch.</p> <p>Always think also about latency which happens when communicating between two machines.</p> <p>If we want to send SOP data we can convert it into DAT data and then convert it back in the second patch.</p>","tags":["TD/NETWORK"]},{"location":"TD/COMP/","title":"COMPs","text":"<p>Open Window Automatically On Start</p> <p>Execute Code When COMP Parameter Changes</p> <p>Perform Mode</p>"},{"location":"TD/COMP/ExecuteCodeWhenParameterChangesCOMP/","title":"ExecuteCodeWhenParameterChangesCOMP","text":"","tags":["TD/COMP","TouchDesigner"]},{"location":"TD/COMP/ExecuteCodeWhenParameterChangesCOMP/#execute-code-when-comp-parameter-changes","title":"Execute Code When COMP Parameter Changes","text":"<p>If you want to watch a parameter that you defined for you COMP and execute some python code if certain conditions are met we can use a <code>ParameterExecuteDAT</code>.</p>","tags":["TD/COMP","TouchDesigner"]},{"location":"TD/COMP/OpenWindowOnStart/","title":"OpenWindowOnStart","text":"","tags":["TD/COMP","TD/WINDOW","TouchDesigner"]},{"location":"TD/COMP/OpenWindowOnStart/#open-window-automatically-on-start","title":"Open Window Automatically On Start","text":"<p>If you want to automatically open the window of your patch when it gets started we can use an <code>ExecuteDAT</code>, set <code>Start</code> ON and write <code>op('window1').par.winopen.pulse()</code> in the onStart method.</p> <p>Download Example File</p>","tags":["TD/COMP","TD/WINDOW","TouchDesigner"]},{"location":"TD/COMP/PerformMode/","title":"Perform mode","text":"<p>We use perform mode if we want to exhibit our work or don't need to work inside the network area anymore. The perform mode frees up resources that would be saved for the network area. </p> <p>To start your project automatically in perform mode  Dialogs-&gt;WindowPlacement-&gt; Check Start in perform mode</p>","tags":["TD/COMP","TouchDesigner"]},{"location":"TD/COMP/PerformMode/#perform-window","title":"Perform window","text":"<p>To have perform window always fullscreen set <code>Size</code> <code>Fill Location</code></p> <p>To get rid of the bar of your operating system on the perform window <code>Disable Borders</code></p>","tags":["TD/COMP","TouchDesigner"]},{"location":"TD/DAT/","title":"DAT","text":"<p>Convert Table Data Into CHOP</p> <p>Join Rows With MergeDAT</p> <p>Reference Data from DAT</p> <p>Sample Pixel Values From TOP For Data</p> <p>Store Presets In Table</p> <p>Swap Columns in TableDAT</p>"},{"location":"TD/DAT/ConvertTableDataIntoCHOP/","title":"ConvertTableDataIntoCHOP","text":"","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/ConvertTableDataIntoCHOP/#convert-table-data-into-chop","title":"Convert Table Data Into CHOP","text":"<p>When we have data in a <code>TableDAT</code> and we want to use it in the <code>CHOP</code> world we can use <code>DatToCHOP</code>, set <code>Output</code> to <code>Single Channel</code> and <code>First Row</code> and <code>First Column</code> to `Values. </p> <p>If you have description in the first row or column you need to change the values to <code>Names</code></p> <p>Download Example File</p>","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/JoinRowsMergeDAT/","title":"JoinRowsMergeDAT","text":"","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/JoinRowsMergeDAT/#join-rows-with-mergedat","title":"Join Rows With MergeDAT","text":"<p>If we want to combine table information from multiple <code>TableDAT</code> inside one row we can use a <code>MergeDAT</code> and set How to <code>Collapse Rows</code>.  Concatenate With allows us to define how we end each entry.</p> <p>Download Example File</p>","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/ReferenceDataFromDAT/","title":"ReferenceDataFromDAT","text":"","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/ReferenceDataFromDAT/#reference-data-from-dat","title":"Reference Data From DAT","text":"<p>There are multiple ways to reference the data from for example a <code>TableDAT</code>.</p> <p>Index of the column or row <code>op('opname')[rowIndex,colIndex]</code></p> <p>Column or row name <code>op('opname')['hans','column']</code></p>","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/ReplaceSpecificValuesDAT/","title":"ReplaceSpecificValuesDAT","text":"","tags":["TD/DAT","TD/TABLE"]},{"location":"TD/DAT/ReplaceSpecificValuesDAT/#replace-specific-values-in-dat","title":"Replace specific Values in DAT","text":"<p>To replace a specific value in a <code>TableDAT</code> we can use a <code>MergeDAT</code> and <code>Replace Cells By Column/Rows</code>. The heading of the rows/colums have to be the as in the source <code>TableDAT</code>.</p>","tags":["TD/DAT","TD/TABLE"]},{"location":"TD/DAT/SamplePixelValuesFromTOPForData/","title":"SamplePixelValuesFromTOPForData","text":"","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/SamplePixelValuesFromTOPForData/#sample-pixel-values-from-top-to-create-data","title":"Sample Pixel Values From TOP to Create Data","text":"<p>We can use an <code>EvaluateDAT</code> to sample the pixel values from a TOP. In the <code>Expressions</code> Table we define which pixel we sample <code>op('noise1').sample(x=1,y=me.inputRow)</code></p> <p>Download Example File</p>","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/StorePresetsInTable/","title":"StorePresetsInTable","text":"","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/StorePresetsInTable/#store-presets-in-tables","title":"Store Presets In Tables","text":"<p>For VJ sets or bigger projects it can be useful to store preset values in tables and then just select the column with the desired values. We reference the in column and row in  the operator where we want to apply the values.</p> <p>Download Example File</p>","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/SwapColsInTableDAT/","title":"SwapColsInTableDAT","text":"","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/DAT/SwapColsInTableDAT/#swap-columns-in-tabledat","title":"Swap Columns in TableDAT","text":"<p>We can use a <code>ReorderDAT</code> to swap the columns from a <code>TableDAT</code>.</p>","tags":["TD/DAT","TD/SCRIPTING"]},{"location":"TD/LIGHTING/Laser/","title":"Laser","text":"<p>To use lasers we need an <code>usbtoavb</code> interface. AVB stands for Audio-visual bridging LA.Toolbox is a program to connect the interface with the actual laser.</p> <p>When all the right drivers for the interface are installed the <code>usbtoavb</code> will be accessible as a network.</p> <p>We need to set the ip address so the laser and the pc live in the same subnet.</p> <p>Laser and the interface need to have the same samplerate set - 9600hz?</p> <p>To normalize the projection surface we can use DGC - digital geometric connection. It is inside of <code>LA.Toolbox</code></p>","tags":["TD/LIGHTING","TD/LASER","TouchDesigner"]},{"location":"TD/LIGHTING/Laser/#output-shapes-in-td","title":"Output Shapes in TD","text":"<p>We can directly convert the SOP into <code>LaserCHOP</code>. In the <code>LaserCHOP</code> we have to set the right frequency. </p> <p>To output the laser we use <code>AudioDeviceOutCHOP</code>. So we are treating laser as if it was audio. In the <code>AudioDeviceOutCHOP</code> we selet <code>ASIO Audio Driver</code> and our Interface e.g. <code>ASIO MADIFACE USB</code>.</p>","tags":["TD/LIGHTING","TD/LASER","TouchDesigner"]},{"location":"TD/LIGHTING/Laser/#how-does-laser-produce-images","title":"How does laser produce images","text":"<p>A laser only outputs one point. The laser travels/moves so fast that it looks to humans like a solid line. </p> <p></p> <p>When you draw a straight line you want to draw as little points as possible but beware that lesser points make the laser less bright.</p> <p><code>Vertex Hold</code> defines how long laser should stay at each corner point of a shape. At a straight line part of your shape you dont want the laser to hold but just travel along the points.</p> <p>In the angles you want nice big vertex hold so you get pointy edges.</p> <p><code>Blanking</code> defines how the laser sould travel between shapes. When we travel between shapes the laser travels but we turn of the light. You want to define the stepsize in the blanking phase. Each laser has an amount of points it can travel in a frame/second.</p> <p>When you have rounded corners on your shape you need to raise max vertex holds to get cleaner corners.</p> <p>If the blanking is not working properly play with step size - as high as possible so you don't lose resolution in total - and maybe <code>Preblanking off delay</code>. It describes when to turn off the laser and before the blanking and after the blanking.</p> <p>Make sure that lasers stays at corners as long as it needs to but also travels to next shape as fast as possible.</p>","tags":["TD/LIGHTING","TD/LASER","TouchDesigner"]},{"location":"TD/LIGHTING/Laser/#connecting-multiple-laysers","title":"Connecting multiple laysers","text":"<p>If you want to control lasers you need to add a avb switch.</p> <p>In TD you need to use <code>MergeCHOP</code> to put all <code>LaserCHOP</code> into one output chop. In the <code>RMEAVBController</code> you need to define that you get one input streamd and x output streams. Each having 5 channels.  Then assign which laser should listen to which stream.</p>","tags":["TD/LIGHTING","TD/LASER","TouchDesigner"]},{"location":"TD/PERFORMANCE/","title":"Performance","text":"<p>FPS logging</p>"},{"location":"TD/PERFORMANCE/FPSLogging/","title":"FPSLogging","text":"","tags":["TD/PERFORMANCE","TouchDesigner"]},{"location":"TD/PERFORMANCE/FPSLogging/#fps-logging","title":"FPS Logging","text":"<p>When we want to test the performance of our project we can write a Log and monitor the FPS over time. For that we take a <code>ClockCHOP</code> use it's parameters and join them in a f-string like in the code below.</p> <p>Every time the parameter changes we overwrite the first line in the <code>TableDAT</code> and pulse to write a new line into a log file with <code>FileOutDAT</code>.</p> <pre><code>def onValueChange(channel, sampleIndex, val, prev):\n    clock = op('clock2')\n    # Get data from clock\n    sek = int(clock[0])\n    min = int(clock[1])\n    hr = int(clock[2])\n    day = int(clock[3])\n    month = int(clock[4])\n\n    # construct date\n    date = f'25-{month}-{day}-{hr}:{min}:{sek}'\n    fps = op('perform1')[0]\n\n    # set date and fps as first line in table\n\n    op('table1')[0,0] = f'TIME:{date} - FPS:{fps}'\n\n    # pulse the writing of a new line\n    op('fileout1').par.write.pulse()\n    return\n</code></pre> <p>Download Example File </p>","tags":["TD/PERFORMANCE","TouchDesigner"]},{"location":"TD/SCRIPTING/","title":"SCRIPTING","text":"<p>Access return values from custom function</p> <p>Combine String To Operator Name</p> <p>Null Operation</p> <p>Join Values In F-String</p> <p>Get The Height From Top</p> <p>Reference Values with Math Library</p> <p>Scripting Cheatsheet</p> <p>Set Cook Flag Operator</p> <p>Set Log Flag Operator</p> <p>Set Slider Value Via Script</p>"},{"location":"TD/SCRIPTING/AccessReturnValuesCustomFunction/","title":"AccessReturnValuesCustomFunction","text":"<p>Reference Values Math Library Img</p>","tags":["TD/TOPS","TD/CHOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/AccessReturnValuesCustomFunction/#access-return-values-from-custom-function","title":"Access Return Values From Custom Function","text":"<p>If we write our own function and it returns multiple values we want to be able to access the single returned values. We can do that by using the squared brackets with the index <code>valFromFunc[0]</code>.</p>","tags":["TD/TOPS","TD/CHOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/CombineStringToOperatorName/","title":"Combine String To Operator Name","text":"<p>When we want to set values for multiple instances of the same operator type and we want to combine the operator names with variables and strings there are multiple ways to achieve this.</p> <p>One is <pre><code>for i in range(1,6):\n    op('button'+str(i)).par.x = op('table1')['button'+str(i),'posX']\n    op('button'+str(i)).par.y = op('table1')['button'+str(i),'posY']\n</code></pre></p>","tags":["TD/DAT","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/GetTheHeightFromTop/","title":"GetTheHeightFromTop","text":"","tags":["TD/TOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/GetTheHeightFromTop/#get-the-height-from-top","title":"Get The Height From TOP","text":"<p>To reference the height of a TOP we can use <code>op('topName').height</code></p>","tags":["TD/TOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/JoinValuesInString/","title":"Join Values In F-String","text":"<p>If we want to use the data from different operators and want to join them in a string we can use f-strings.</p> <pre><code>def onValueChange(channel, sampleIndex, val, prev):\n    clock = op('clock2')\n    # Get data from clock\n    sek = int(clock[0])\n    min = int(clock[1])\n    hr = int(clock[2])\n    day = int(clock[3])\n    month = int(clock[4])\n\n    # construct date\n    date = f'25-{month}-{day}-{hr}:{min}:{sek}'\n</code></pre>","tags":["TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/NullOperation/","title":"NullOperation","text":"","tags":["TD/DATS","TD/SCRIPTING","TouchDesigner","Python"]},{"location":"TD/SCRIPTING/NullOperation/#null-operation","title":"Null Operation","text":"<p>If you want to have a null operation so nothing happens when a certain case is met we can use <code>pass</code></p> <pre><code>def onValueChange(channel, sampleIndex, val, prev):\n    if val &lt; 0.8:\n        pass\n    else:\n        op('constant1').par.value0 = val\n    return\n</code></pre>","tags":["TD/DATS","TD/SCRIPTING","TouchDesigner","Python"]},{"location":"TD/SCRIPTING/ReferenceValueswithMathLibrary/","title":"ReferenceValueswithMathLibrary","text":"<p>Reference Values Math Library Img</p>","tags":["TD/TOPS","TD/CHOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/ReferenceValueswithMathLibrary/#reference-values-with-math-library","title":"Reference Values with Math Library","text":"<p>When we reference values from an operator we also can manipulate these values further by using for example the Python Math Library <code>math.sin(op('me')[0])</code></p>","tags":["TD/TOPS","TD/CHOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/ScriptingCheatSheet/","title":"Scripting Cheatsheet","text":"<p>Get width and height from parent <code>me.parent().par.w</code> - width <code>me.parent().par.h</code> - height</p> <p>Get width/ height of child operator <code>op('/out1').width</code> <code>op('/out1').height</code></p>","tags":["TD/SCRIPTING","TD/UI","TouchDesigner"]},{"location":"TD/SCRIPTING/ScriptingCheatSheet/#channels","title":"Channels","text":"<p>Referencing Channels <code>op('constant1')[0]</code> &lt;- First channel  <code>op('constant1').chan(0)</code> &lt;- First channel <code>op('constant1')['channelName']</code> <code>op('constant').chan(0).name</code> - Channelname</p>","tags":["TD/SCRIPTING","TD/UI","TouchDesigner"]},{"location":"TD/SCRIPTING/ScriptingCheatSheet/#tables","title":"Tables","text":"<p>Get value from input cell <code>me.inputCell</code></p>","tags":["TD/SCRIPTING","TD/UI","TouchDesigner"]},{"location":"TD/SCRIPTING/ScriptingCheatSheet/#inputs","title":"Inputs","text":"<p>Count inputs of operator <code>len(op('switch1').inputs)</code></p>","tags":["TD/SCRIPTING","TD/UI","TouchDesigner"]},{"location":"TD/SCRIPTING/ScriptingCheatSheet/#manipulate-data","title":"Manipulate data","text":"<p>Round values <code>round(val,2)</code></p> <p>https://interactiveimmersive.io/blog/python/python-cheat-sheet-for-touchdesigner-developers/</p>","tags":["TD/SCRIPTING","TD/UI","TouchDesigner"]},{"location":"TD/SCRIPTING/SetCookFlagOperator/","title":"SetCookFlagOperator","text":"","tags":["TD/TOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/SetCookFlagOperator/#set-cook-flag-of-operator","title":"Set Cook Flag of Operator","text":"<p>With <code>op('opname').allowCooking = False/True</code> we can set the cook flag of on operator.</p>","tags":["TD/TOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/SetLogFlagOperatorScript/","title":"SetLogFlagOperatorScript","text":"","tags":["TD/TOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/SetLogFlagOperatorScript/#set-logflag-of-operator-via-script","title":"Set Logflag of Operator via script","text":"<pre><code>bg = op('opName')\nbg.lock = False\nbg.lock = True\n</code></pre>","tags":["TD/TOPS","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/SetSliderValueViaScript/","title":"Set Slider Value Via Script","text":"<p>When we want to reset the position of a slider we can use scripting to set the slider position to the value we want with <code>op('slider1').panel.u.val = 0.5</code></p>","tags":["TD/UI","TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SCRIPTING/StoreLocalVariables/","title":"Store Local Variables","text":"<p>We can store local variables in a script with <pre><code>me.parent().setVar('Height',720)\nme.parent().setVar('Width',720)\nme.parent().setVar('VariableName',20)\n</code></pre> inside a <code>textDAT</code> for example.</p> <p>If we then right click the <code>textDAT</code> and click <code>Run Script</code> we get a local <code>Base</code> with the variables.</p> <p>If we then want to reference the variables in an operator we can use <code>me.var('VariableName')</code></p> <p>If we want even more flexible variables like when we want to store the <code>SliderCOMP</code> and then get it's variable.</p>","tags":["TD/SCRIPTING","TouchDesigner"]},{"location":"TD/SENSORS/","title":"Sensors","text":"<p>Avoid Sensor Data Leaving Area</p> <p>Kinect</p>"},{"location":"TD/SENSORS/AvoidSensorDataLeavingArea/","title":"Avoid Sensor Data Leaving Area","text":"<p>When we work with sensors and interaction we often want to assure that the values stay inside the screen or a value area.  So it makes sense to conside using <code>LimitCHOP</code> to define what the maximum range of your data should be.</p>","tags":["TD/SENSORS","TD/INTERACTIONS","TouchDesigner"]},{"location":"TD/SENSORS/Kinect/","title":"Kinect","text":"<p>The <code>KinectCHOP</code> has the option the get the values in <code>Image Space Positions</code> or in <code>World Space Positions</code>.</p> <p><code>World Space Positions</code> means that all values are in relation to the 3D space that the kinect tracks.</p> <p><code>Image Space Positions</code> gives you the coordinates in UV space of our screen.</p>","tags":["TD/SENSORS","TouchDesigner"]},{"location":"TD/SOP/","title":"SOP","text":"<p>Convert 2D Image into 3D Shape</p> <p>Delete Group From CopySOP</p> <p>Displace Copied LineSOP By Force</p> <p>Distribute Points At Random Position</p> <p>Import Specific Geo From FBX</p> <p>Merge Lines Into Surface</p> <p>Mouse Position To SOP Line</p> <p>Particles Move Back To Source Shape</p> <p>Point Sprite Particle System</p> <p>Rotate Camera On Path</p>"},{"location":"TD/SOP/Convert2DImage3Dshape/","title":"Convert2DImage3Dshape","text":"","tags":["TD/SOP","TD/TOP","TouchDesigner"]},{"location":"TD/SOP/Convert2DImage3Dshape/#convert-2d-image-into-3d-shape","title":"Convert 2D Image into 3D Shape","text":"<p>To transform your 2D image into a 3D shape we can use a <code>TraceSOP</code> and then extrude it with the <code>ExtrudeSOP</code> into the 3rd dimension. To be able to properly apply textures and lighting later you need to add a <code>Attribute CreateSOP</code> and set <code>compute normals</code> and <code>compute tangents</code>ON. </p> <p>With <code>depth scale</code> parameter in the <code>extrudeSOP</code> can we define the depth of the Shape.</p> <p>Download Example File </p>","tags":["TD/SOP","TD/TOP","TouchDesigner"]},{"location":"TD/SOP/DeleteCopiedGroup/","title":"DeleteCopiedGroup","text":"","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/DeleteCopiedGroup/#delete-group-from-copysop","title":"Delete Group From CopySOP","text":"<p>If we want to delete one of the copies from the <code>CopySOP</code> we can set <code>Create Output Groups</code> to <code>On</code> in the parameter window. This creates for each copy a new group. We then connect the <code>CopySOP</code> with a <code>DeleteSOP</code> and select the group we want to delete.</p> <p></p> <p>Download Example File</p>","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/DisplaceCopiedLineSOPbyForce/","title":"DisplaceCopiedLineSOPbyForce","text":"","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/DisplaceCopiedLineSOPbyForce/#displace-copied-linesop-by-force","title":"Displace Copied LineSOP by Force","text":"<p>If we want to copied <code>LineSOP</code> to be affected by forces we can use the output of the <code>CopySOP</code> as the Spring Source of the <code>SpringSOP</code>. We then use a <code>SphereSOP</code> in combination with <code>MetaballSOP</code> and <code>ForceSOP</code> to create a force-source. In the <code>ForceSOP</code> we have to define what kind of force it should be. </p> <p>If we want that some points are fixed we create a group with the <code>GroupSOP</code> to define which the fixed points gonna be. We then reference in the <code>SpringSOP</code> in the Nodes tab set <code>Fixed Points Group</code> the previously created group.</p> <p>Download Example File</p>","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/DistributePointsAtRandomPosition/","title":"DistributePointsAtRandomPosition","text":"","tags":["TD","TD/SOP"]},{"location":"TD/SOP/DistributePointsAtRandomPosition/#distribute-points-at-random-position","title":"Distribute Points At Random Position","text":"<p>We can use a <code>SprinkleSOP</code> to distribute the points randomly on the surface or the volume of a source geometry.</p>","tags":["TD","TD/SOP"]},{"location":"TD/SOP/ImportSpecificGeoFromFBX/","title":"ImportSpecificGeoFromFBX","text":"","tags":["TD/SOP","TouchDesigner","TD/Import"]},{"location":"TD/SOP/ImportSpecificGeoFromFBX/#import-specific-geo-from-fbx","title":"Import Specific Geo from FBX","text":"<p>When we import FBX into TouchDesigner they can contain large and complex scenes with multiple Geometries. If you just want to select a specific geometry for your project you can use the helper SOP <code>ImportSelect</code>. This let's you pick which Geometry you want to select out of the complex FBX.</p>","tags":["TD/SOP","TouchDesigner","TD/Import"]},{"location":"TD/SOP/MergeLinesIntoSurface/","title":"MergeLinesIntoSurface","text":"","tags":["TD/SOP","TouchDesigner"]},{"location":"TD/SOP/MergeLinesIntoSurface/#merge-lines-into-a-surface-with-skinsop","title":"Merge Lines into a Surface with SkinSOP","text":"<p>If you want to use <code>lineSOP</code> to create a surface you can combine the lines in a <code>mergeSOP</code> and then create a group of points in <code>groupSOP</code>. With the <code>skinSOP</code> you create the surface. To be able to show  some textures on the new surface you should add a <code>textureSOP</code> before you go into the <code>GEO</code>.</p> <p>Download </p>","tags":["TD/SOP","TouchDesigner"]},{"location":"TD/SOP/MousePositionSOPLine/","title":"MousePositionSOPLine","text":"","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/MousePositionSOPLine/#mouse-position-to-sop-line","title":"Mouse Position To SOP Line","text":"<p>If we want to create an interactive drawing project where we convert the mouse position into a SOP line we can convert the <code>MouseInCHOP</code> data into a <code>TrailCHOP</code> and then set that as the X/Y Channel in a <code>LimitSOP</code>. This converts the data into SOP land. Under the Output tab of the <code>LimitSOP</code> we can set how we want our line to be displayed.</p> <p>Download Example File</p>","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/ParticlesMoveBackToSource/","title":"ParticlesMoveBackToSource","text":"","tags":["TD/SOP","TouchDesigner"]},{"location":"TD/SOP/ParticlesMoveBackToSource/#particles-move-back-to-source-shape","title":"Particles Move Back To Source Shape","text":"<p>If you want to emit particles from a shape and then let the particles move back to the same shape plug the source shape into <code>ParticleSource</code> and <code>SurfaceAttractor</code>.</p>","tags":["TD/SOP","TouchDesigner"]},{"location":"TD/SOP/PointSpriteParticleSystem/","title":"PointSpriteParticleSystem","text":"","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/PointSpriteParticleSystem/#point-sprite-particle-system","title":"Point Sprite Particle System","text":"<p>For Particle Systems we also can use a <code>PointSpriteMAT</code> which allows us to show a top as a particle image. We have to set in <code>ParticleSOP</code> <code>Particle Type</code> as <code>Render as Point Sprites</code>. </p> <p>In the <code>PointSpriteMAT</code> we can change the <code>Constant POint Scale</code> to change the size of the particle.</p> <p>Download Example File</p>","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/RotateCameraOnPath/","title":"RotateCameraOnPath","text":"","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/SOP/RotateCameraOnPath/#rotate-camera-on-path","title":"Rotate Camera On Path","text":"<p>If we want that the camera rotates around the geometry and always looks at it we can assign a <code>PathSOP</code> to the <code>Pathsop</code> parameter of the camera and also let the camera <code>LookAt</code> a <code>NullComp</code>. Set the <code>translatex</code> of the camera to 0 and scale down the geometry so it fits the view of the camera.</p> <p>Download Example File</p>","tags":["TD/SOPS","TD/CHOPS","TD/INTERACTIVE","TouchDesigner"]},{"location":"TD/TECHNIQUES/","title":"Techniques","text":"<p>Export Loop With Length Of Timeline</p> <p>Output Transparent Video</p>"},{"location":"TD/TECHNIQUES/ExportLoop/","title":"Export Loop With Length Of Timeline","text":"<p>If you want to create looping videos we can use a <code>TimelineCHOP</code>, output <code>End</code> parameter, </p>","tags":["TD/TECHNIQUE","TouchDesigner"]},{"location":"TD/TECHNIQUES/OutputTransparentVideos/","title":"Output Transparent Video","text":"<p>To output transparent videos in TouchDesigner you need to choose a video codec that supports alpha like: - Animation - HAP  - HAP Q - HAP R</p> <p>There are also output codecs for Notch and GoPro - GoPro - Cineform - NotchLC</p> <p>Set <code>movie pixel format</code> to <code>RGBA</code>.</p>","tags":["TD/TECHNIQUE","TouchDesigner"]},{"location":"TD/TOP/","title":"TOP","text":"<p>Change Coloring TOP Texture</p> <p>Count Up On New Circle</p> <p>Feedback Distortion With LensDistort</p> <p>FX Gallery</p> <p>Interpolate Frames Movie</p> <p>Line Break Text in TextTOP</p> <p>MovieFileIn</p> <p>Simple Tile Displace of Image</p> <p>Shorten Length Movie</p>"},{"location":"TD/TOP/ChangeColoringImages/","title":"ChangeColoringImages","text":"","tags":["TD/TOPS","TD/MOVIE","TouchDesigner"]},{"location":"TD/TOP/ChangeColoringImages/#change-coloring-top-texture","title":"Change Coloring TOP Texture","text":"<p>To change the coloring of an image or a video we can first convert it to monochrome with the <code>MonochromeTOP</code> and then remap the gray values to color values with a <code>LookupTOP</code> and a <code>RampTOP</code>.</p>","tags":["TD/TOPS","TD/MOVIE","TouchDesigner"]},{"location":"TD/TOP/CountUpNewCircle/","title":"CountUpNewCircle","text":"","tags":["TD/TOPS","TD/CHOPS","TD/INTERACTIVE","TD/SENSOR","TouchDesigner"]},{"location":"TD/TOP/CountUpNewCircle/#count-up-when-new-circle-appears","title":"Count Up When New Circle Appears","text":"<p>When we work for example with sensors like lidar, we often want to check if a new object is inside a specific area - and then count up.  The lidar sensor gives us ..., which we then instance with circle. If an object or person is inside our desired area we have a circle inside the top. We can analyse the TOP with an <code>AnalyseTOP</code>. We use Operation <code>Sum</code> and set Scope to <code>Full Image</code>. This gives us a full white image if circle is visible and a transparent image if no circle is inside the TOP. We can convert this with <code>TopTo</code> Chop into a trigger for the <code>CountCHOP</code>. In the <code>TopTo</code> we set Crop also to <code>Full Image</code>.</p> <p>Download Example File</p>","tags":["TD/TOPS","TD/CHOPS","TD/INTERACTIVE","TD/SENSOR","TouchDesigner"]},{"location":"TD/TOP/FeedbackDistortionLensDistort/","title":"FeedbackDistortionLensDistort","text":"","tags":["TD/TOPS","TD/TECHNIQUE","TouchDesigner"]},{"location":"TD/TOP/FeedbackDistortionLensDistort/#feedback-distortion-with-lensdistort","title":"Feedback Distortion With LensDistort","text":"<p>Inside a Feedback-Loop we can use a <code>LensDistortTOP</code> with values from a <code>NoiseCHOP</code> assigned to create interesting distortions.</p> <p>Download Example File</p>","tags":["TD/TOPS","TD/TECHNIQUE","TouchDesigner"]},{"location":"TD/TOP/InterpolateFramesMoviefile/","title":"InterpolateFramesMoviefile","text":"","tags":["TD/TOPS","TD/MOVIE","TouchDesigner"]},{"location":"TD/TOP/InterpolateFramesMoviefile/#interpolate-frames-movie-file","title":"Interpolate Frames Movie File","text":"<p>In TouchDesigner we can interpolate between the frames of a video. This is often useful when we play a video file really slow.  To allow the interpolation, in the parameter window of the <code>MovieFileInTOP</code> we can go to the Image tab and set <code>Interpolate Frames</code> to On.</p>","tags":["TD/TOPS","TD/MOVIE","TouchDesigner"]},{"location":"TD/TOP/LineBreakTextTOP/","title":"LineBreakTextTOP","text":"","tags":["TD/TOPS","TD/TECHNIQUE","TD/TEXT","TouchDesigner"]},{"location":"TD/TOP/LineBreakTextTOP/#line-break-text-in-texttop","title":"Line Break Text in TextTOP","text":"<p>When we want to decide where the text in a <code>TextTOP</code> breaks we can use the line break signifier <code>\\n</code> inside the string. We need to set the text into an expression with ' surrounding it.</p>","tags":["TD/TOPS","TD/TECHNIQUE","TD/TEXT","TouchDesigner"]},{"location":"TD/TOP/MovieFileIn/","title":"MovieFileIn","text":"<p>Playmodes <code>Sequential</code> - Movie plays without considering changing in timeline - always going forward <code>Specific index</code> - define which index of frames get played <code>Locked to timeline</code> - Video frames get played according to timeline</p>","tags":["TD/TOPS"]},{"location":"TD/TOP/RepeatingPatternFeedback/","title":"RepeatingPatternFeedback","text":"","tags":["TD/TOPS","TD/TECHNIQUE","TouchDesigner"]},{"location":"TD/TOP/RepeatingPatternFeedback/#repeating-pattern-with-feedback","title":"Repeating Pattern with Feedback","text":"<p>By creating a Feedback Loop and transforming the feedback texture by a certain pixel value we can create a repeating pattern.</p> <p>Download Example File</p>","tags":["TD/TOPS","TD/TECHNIQUE","TouchDesigner"]},{"location":"TD/TOP/ShortenLengthMovie/","title":"ShortenLengthMovie","text":"","tags":["TD/TOPS","TD/MOVIE","TouchDesigner"]},{"location":"TD/TOP/ShortenLengthMovie/#shorten-length-of-movie","title":"Shorten Length Of Movie","text":"<p>In the <code>MovieFileInTOP</code> under Trim tab we can can shorten a video.</p>","tags":["TD/TOPS","TD/MOVIE","TouchDesigner"]},{"location":"TD/TOP/SimpleTileDisplaceImage/","title":"SimpleTileDisplaceImage","text":"","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/SimpleTileDisplaceImage/#simple-tile-displace-of-image","title":"Simple Tile Displace of Image","text":"<p>When you want to displace your image with a pixelated version of your image source you can connect your source with a <code>LimitTOP</code> and set Quantisize Position to Round and change the Position Step value. </p> <p>Download Example File</p>","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/","title":"FX-Gallery","text":"<p>Big Edges Displace Effect</p> <p>Glas Like Displace FX</p> <p>Warhol Effect</p>"},{"location":"TD/TOP/FX-Gallery/BigEdgesDisplaceEffect/","title":"BigEdgesDisplaceEffect","text":"","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/BigEdgesDisplaceEffect/#big-edges-displace-effect","title":"Big Edges Displace Effect","text":"<p>By using big values for <code>Strength</code> and <code>Sample Step</code> we can create an interesting displace effect. Works good with videos and foto textures.</p> <p>Download Example File</p>","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/GlasLikeDisplaceFX/","title":"GlasLikeDisplaceFX","text":"","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/GlasLikeDisplaceFX/#glas-like-displace-fx","title":"Glas Like Displace FX","text":"<p>Use a <code>DisplaceTOP</code> to move the <code>NoiseTOP</code> texture by a <code>RampTOP</code> with a <code>Period</code> smaller than 0.1 and set <code>Displace Weight</code> to a small value!</p> <p>Download Example File</p>","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/WarholFX/","title":"WarholFX","text":"","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/WarholFX/#warhol-effect","title":"Warhol Effect","text":"<p>To create an image effect similar to warhol paintings we can use a Radial <code>RampTOP</code> to remap the colors.</p>","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/WaterLikeRippleFX/","title":"WaterLikeRippleFX","text":"","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/TOP/FX-Gallery/WaterLikeRippleFX/#glas-like-displace-fx","title":"Glas Like Displace FX","text":"<p>Circular <code>RampTOP</code> which gets displaced by a <code>NoiseTOP</code> which uses the Ramp as a <code>NoiseCoordinateMap</code></p> <p>Download Example File</p>","tags":["TD/TOPS","TD/FX","TouchDesigner"]},{"location":"TD/UI/","title":"UI","text":"<p>Get Value of Current Momentary Button</p> <p>Reference Button Names From Table</p> <p>SelectCOMP To Select UI elements</p> <p>Set UI Position Via Script</p>"},{"location":"TD/UI/GetValCurrentMomentaryBtn/","title":"GetValCurrentMomentaryBtn","text":"","tags":["TD/UI","TD/DAT","TD/SCRIPTING"]},{"location":"TD/UI/GetValCurrentMomentaryBtn/#get-value-of-current-momentary-button","title":"Get Value of Current Momentary Button","text":"<p>If we have multiple momentary buttons in our UI and we want to get the index of the currently selected we can use a <code>PanelCHOP</code> and select the radio parameter.</p> <p>Download Example File</p>","tags":["TD/UI","TD/DAT","TD/SCRIPTING"]},{"location":"TD/UI/ReferenceButtonNamesFromTable/","title":"ReferenceButtonNamesFromTable","text":"","tags":["TD/COMP","TD/UI","TouchDesigner"]},{"location":"TD/UI/ReferenceButtonNamesFromTable/#reference-button-names-from-table","title":"Reference Button Names From Table","text":"<p>We can create a <code>TableDat</code> with all the labels for the buttons and then reference we reference the <code>TableDat</code> with the index of the button minus 1 to match the row in the table.</p>","tags":["TD/COMP","TD/UI","TouchDesigner"]},{"location":"TD/UI/SelectCOMPSelectUIElements/","title":"SelectCOMPSelectUIElements","text":"","tags":["TD/COMP","TD/UI","TouchDesigner"]},{"location":"TD/UI/SelectCOMPSelectUIElements/#selectcomp-to-select-different-ui-elements","title":"SelectCOMP to Select Different UI Elements","text":"<p>If you want to change your UI depending on a value or want to use a button to control which UI is shown you can change the value of the <code>SelectCOMP</code>. In the Download Example a Button switches between different Container UIs.</p> <p>Download Example </p>","tags":["TD/COMP","TD/UI","TouchDesigner"]},{"location":"TD/UI/SetUIPositionViaScript/","title":"SetUIPositionViaScript","text":"","tags":["TD/UI","TD/DAT","TD/SCRIPTING"]},{"location":"TD/UI/SetUIPositionViaScript/#set-ui-position-via-script","title":"Set UI Position Via Script","text":"<p>We can use a <code>TableDAT</code> to store the positions of the UI elements and combine it with <code>DATExecute</code> which acts <code>onTableChange</code>. So every time the values in the table get changed the UI elements get set to the new position.</p> <pre><code>def onTableChange(dat):\n\n    for i in range(1, 7):\n        op('button' +str(i)).par.x = op('table1')['button' +str(i),'posX']\n        op('button' +str(i)).par.y = op('table1')['button' +str(i),'posY']\n    return\n</code></pre> <p>Download Example File</p>","tags":["TD/UI","TD/DAT","TD/SCRIPTING"]},{"location":"UNITY/","title":"Unity","text":"<p>AR</p> <p>Measure How Long Process in Code Takes</p>"},{"location":"UNITY/AR/","title":"AR","text":"<p>Ray Timer</p> <p>Turn AR Session On or Off</p>"},{"location":"UNITY/AR/RayTimer/","title":"Ray Timer","text":"<p>To increase performance and not to check for a touch input on every frame we can create a ray timer.</p> <pre><code>void Update(){\n    if(rayTimer &gt;= generateRayAfterSeconds) {\n        if(Input.touchCount &gt; 0){\n        //Do something\n        rayTimer = 0;\n                }\n    } else{\n    rayTimer += Time.deltaTime * 1.0f;\n}\n</code></pre>","tags":["Unity/AR","Unity"]},{"location":"UNITY/AR/TurnAROnOFF/","title":"Turn AR Session ON/Off","text":"<pre><code>GetComponent&lt;ARSession&gt;().enabled = true; //ON\nGetComponent&lt;ARSession&gt;().enabled = false; //OFF\n</code></pre>","tags":["Unity/AR","Unity"]},{"location":"UNITY/Audio/PlaySoundOnce/","title":"Play Sound Once Via Script","text":"<pre><code>_audioSource.PlayOneShot(_audio.clip,1.0f)\n</code></pre>","tags":["Unity/Audio","Unity/Scripting","Unity"]},{"location":"UNITY/CODING/CloseUnityAppViaCode/","title":"Close Unity Application via Code","text":"<p><code>Application.Quit()</code></p>","tags":["Unity/Coding","Unity"]},{"location":"UNITY/CODING/TriggerOnClickBtnEvent/","title":"Trigger On Click Button Event","text":"<pre><code>[SerializedField] Button myButtonToTrigger;\n\nmyButtonToTrigger.OnClick.Invoke();\n</code></pre>","tags":["Unity/Coding","Unity"]},{"location":"UNITY/GENERAL/FindGOBTextMeshPro/","title":"Find All GameObjects With TextMeshPro Component","text":"<p>In the Scene hierachy we can search for GameObjects. By adding <code>t:</code> we can search for components or GameObjects with certain Scripts or components. <code>t:TextMeshProUGUI</code></p>","tags":["Unity/General","Unity/Editor","Unity/TMPRO","Unity"]},{"location":"UNITY/GENERAL/SerializableObjects/","title":"Serializable Objects","text":"<p>In the context of Unity, Serialization means that the serializable objects will appear with all their members in the inspector and changes made in the inspector will be saved into the scene.</p>","tags":["Unity/General","Unity"]},{"location":"UNITY/GENERAL/SinglePurposeScripts/","title":"Single Purpose Scripts","text":"<p>In general each script you add to an object should focus on one single functionality. You then can add multiple scripts for different functionalities.</p>","tags":["Unity/General","Unity"]},{"location":"UNITY/OPTIMIZATION/MessureHowLongProcessTakes/","title":"Measure how long a process in code takes","text":"<pre><code>System.Diagnostics.Stopwatch sw;\n...\nprivate void Start()\n    {\n         sw = new System.Diagnostics.Stopwatch();\n        sw.Start();\n        ....\n        sw.Stop();\n        Debug.Log(operationHandle.Result.name + \" took to load in Milliseconds: \" + sw.Elapsed.TotalMilliseconds);\n    }\n</code></pre>","tags":["Unity","Unity/Optimization"]},{"location":"UNITY/OPTIMIZATION/ReleaseUnusedAssetsFromMemory/","title":"Release Unused Assets From Memory","text":"<pre><code>  Resources.UnloadAsset(assetname);\n  assetname = null;\n</code></pre>","tags":["Unity","Unity/Optimization"]},{"location":"VVVV/","title":"VVVV","text":"<p>Animations</p> <p>Audio</p> <p>Basics</p> <p>Collections</p> <p>Handling Data and Values</p> <p>Managing Programs</p> <p>Stride</p> <p>UI</p> <p>Useful Learning Sources</p> <p>Useful Libraries</p>"},{"location":"VVVV/Basics/","title":"Basics","text":"<p>Each patch in VVVV has a <code>Application</code> side and a <code>Definition</code> side.  On the <code>Application</code> side is the code of the program and it is running on every frame. On the <code>Definitions</code> side are the datatype declarations that you can use in the application side or you can expose as a library.</p> <p>On the definitions side you only can have definitions but on the application side you can have definitions and running code. </p>","tags":["VVVV"]},{"location":"VVVV/Basics/#navigating-vvvv","title":"Navigating VVVV","text":"<p>show left patch - <code>Alt+leftarrow</code> show right patch - <code>Alt+rightarrow</code> </p> <p>Move all the nodes including frames - <code>hold space +drag</code></p>","tags":["VVVV"]},{"location":"VVVV/Basics/#connecting-nodes","title":"Connecting Nodes","text":"<p>Sometimes you have the situation where you want to connect a node with a not jet typed input. If you want to be able connect it you hold down space key.</p>","tags":["VVVV"]},{"location":"VVVV/Basics/#process-nodes","title":"Process Nodes","text":"<p>We can use <code>Process</code> node to group certain functionality together with all the behavior the needs grouped together.</p> <p>When you create a process node and then you look inside of it you always see the value of that instance of the process node.</p> <p><code>Process</code> nodes also have a Generics switch.</p>","tags":["VVVV"]},{"location":"VVVV/UsefulLearningSources/","title":"VVVV","text":"<p>https://www.youtube.com/playlist?list=PLEncasrnvr2bkPb0QKdU1DrDs4Hd_Jr0V</p>"},{"location":"VVVV/Animations/","title":"Animations","text":"<p>Animate Between Colors With Smoothstep</p> <p>Count On MouseClick</p> <p>Create Ascending Value</p> <p>Fade In, Hold, Fade Out Value</p> <p>Randomize Seed Of Randomspread</p> <p>Smooth jittery input data</p> <p>Trigger Bool event every x seconds</p>"},{"location":"VVVV/Animations/AnimateBetweenColorsSmoothstep/","title":"AnimateBetweenColorsSmoothstep","text":"","tags":["VVVV"]},{"location":"VVVV/Animations/AnimateBetweenColorsSmoothstep/#animate-between-colors-with-smoothstep","title":"Animate Between Colors With Smoothstep","text":"<p><code>Smoothstep(RGBA)</code> allows us to animate between two colors.</p>","tags":["VVVV"]},{"location":"VVVV/Animations/CountMouseClick/","title":"CountMouseClick","text":"","tags":["VVVV"]},{"location":"VVVV/Animations/CountMouseClick/#count-on-mouseclick","title":"Count On MouseClick","text":"<p>To create a counter on mouse click we connect <code>Mouse</code> node with a <code>TogEdge</code> to make sure that it's one mouse click per frame even if the mouse might be hold down. Otherwise counter increases value per frame while the button is hold down.</p>","tags":["VVVV"]},{"location":"VVVV/Animations/CreateAscendingValue/","title":"CreateAscendingValue","text":"","tags":["VVVV","VVVV/Animations"]},{"location":"VVVV/Animations/CreateAscendingValue/#create-always-ascending-value","title":"Create always ascending value","text":"<p><code>Stopwatch</code> creates a global runtime value of the passed time.</p> <p>We also can use <code>Playhead</code> which also allows to loop to value at a certain range.</p> <p>The <code>Integrator</code> node let's us create something similar but we can decide how much we want to add every frame.</p>","tags":["VVVV","VVVV/Animations"]},{"location":"VVVV/Animations/FilterInHoldFilterOutValue/","title":"FilterInHoldFilterOutValue","text":"","tags":["VVVV","VVVV/Animations"]},{"location":"VVVV/Animations/FilterInHoldFilterOutValue/#fade-in-hold-fade-out-value","title":"Fade In, Hold, Fade Out Value","text":"<p>To create an animation behavior for objects, where a trigger smoothly moves a value to a target value, holds that value for a time and then smoothly moves the value back, we use a <code>MonoFlop</code> and we add the HoldTime with the Filter In time together so the <code>MonoFlop</code> outputs True or 1.0 for the holding time plus the filter in time. The output signal of the <code>MonoFlop</code> triggers the <code>Switch</code> to change the Filter Time in the <code>Filter</code> node. </p> <p>Download Example File</p>","tags":["VVVV","VVVV/Animations"]},{"location":"VVVV/Animations/RandomizeSeedRandomSpread/","title":"RandomizeSeedRandomSpread","text":"","tags":["VVVV"]},{"location":"VVVV/Animations/RandomizeSeedRandomSpread/#randomize-seed-of-randomspread","title":"Randomize Seed Of Randomspread","text":"<p>We can use a <code>Random(FromTo)</code> to randomize the seed of a random spread. Plug the <code>Cycles</code> value into the spread so every time the cycles changes a new random seed gets set for the spread.</p>","tags":["VVVV"]},{"location":"VVVV/Animations/SmoothJitteryInputData/","title":"Smooth jittery input data","text":"<p>The <code>Damper</code> node allows us to smoothen out signals that are to jumpy and jittery.</p> <p><code>Damper</code> also outputs a boolean to check if value changed.</p>","tags":["VVVV","VVVV/Data"]},{"location":"VVVV/Animations/SwitchBetweenDampening/","title":"SwitchBetweenDampening","text":"","tags":["VVVV"]},{"location":"VVVV/Animations/SwitchBetweenDampening/#switch-between-dampening-applied-and-not","title":"Switch Between Dampening applied and not","text":"<p>Add a <code>Switch</code> that sets the Filter time between 0 and the filter time we want to use. Then set the index of the switch according to when we want to dampen the value.</p>","tags":["VVVV"]},{"location":"VVVV/Animations/TriggerBoolSeconds/","title":"TriggerBoolSeconds","text":"","tags":["VVVV"]},{"location":"VVVV/Animations/TriggerBoolSeconds/#trigger-bool-event-every-x-seconds","title":"Trigger Bool event every x seconds","text":"<p>To create a trigger that goes true every x seconds we can use <code>RealTimeClock</code> Node connect it into the <code>Trigger</code> Node.</p>","tags":["VVVV"]},{"location":"VVVV/Audio/","title":"Audio","text":"<p>Simple Audio Reactive Setup </p>","tags":["VVVV","VVVV/Audio","Audio","AV"]},{"location":"VVVV/Audio/SimpleAudioReactivePatch/","title":"SimpleAudioReactivePatch","text":"","tags":["VVVV","VVVV/Audio","Audio","AV"]},{"location":"VVVV/Audio/SimpleAudioReactivePatch/#audio-reactive-patch","title":"Audio Reactive Patch","text":"<p>If we want to create an audio reactive patch we activate the <code>VL.Audio</code> package in the node browser and use the <code>AudioIn</code> to get the sound into the patch. We the want to convert the Stereo to a single channel with <code>ToMono</code>. We then can convert the <code>FFT</code> of the audio signal.</p> <p>After that we convert the information into a spread with the <code>FromSequence(Spread)</code> node and select with <code>GetSpread(Spread)</code> which part of the frequency range we want to use and how much. The <code>Average</code> node then gives us a single value that we can smoothen with a <code>Damper</code> and plug into logic or parameter that we want to change by the audio.</p> <p>You also can use <code>Randomizer</code> after the <code>GetSpread</code> to create a random order of the elements in the spread.</p> <p>Download Example File</p>","tags":["VVVV","VVVV/Audio","Audio","AV"]},{"location":"VVVV/Collections/","title":"Collections","text":"<p>Basics Collections</p> <p>Join Multiple Spreads Concat</p> <p>Random Order of Elements in Spread</p> <p>Repeating Sequence of Numbers</p> <p>Replace Multiple Slices in Spread With For Each</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/CollectionsBasics/","title":"Basics Collections","text":"<p>Collections are datatype's to organize data. They are tables in memory that points to other objects.  Types of collections are <code>Array</code>,<code>Sequence</code>,<code>Dictionary</code> and <code>Spread</code>.</p> <p>With an <code>ISpread</code> we create a <code>Spread</code>o f integers in a given range.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/CollectionsBasics/#mutablitity","title":"Mutablitity","text":"<p>All simple collection types are immutable, but have mutable versions - they have mutable or builder in there name.</p> <p>If you update an immutable collection you create a new snapshot of that table. When you update a mutable collection you directly edit that table in memory.</p> <p>But just because the collection is immutable doesn't mean that the objects inside the collection are immutable. You still can have mutable objects inside the immutable collection.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/CollectionsBasics/#relation-to-sequence","title":"Relation to Sequence","text":"<p>All collections in VL are relate to <code>IEnumerable</code>. That means we always can use <code>FromSequence</code> to convert them to for example to a spread.</p> <p></p> <p>This also means that every Sequence type can be processed with <code>ForEach</code> loop. It will convert it into a <code>Spread</code>. With <code>Key(KeyValuePair)</code> we can get the keys of the dictionary and with <code>Value(KeyValuePair)</code> the values.</p> <p></p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/CollectionsBasics/#performance","title":"Performance","text":"<p>If you do a high amount of loop counts you should avoid <code>Add(Spread)</code>. Then prefer using the splicer of the loops or <code>Flatten</code> afterwards. <code>Flatten</code> reduces <code>Spread&lt;Spread&lt;&gt;&gt;</code> to single <code>Spread</code>.</p> <p>If you still have performance issues try using a <code>SpreadBuilder</code>.</p> <p></p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/CreateGridWithForEachLoops/","title":"CreateGridWithForEachLoops","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/CreateGridWithForEachLoops/#create-grid-with-for-each-loops","title":"Create Grid With For-Each Loops","text":"<p>If we want to create a grid structure with spreads as the source for the position we can layer two <code>ForEach</code> regions and plug each spread source into the Splicer bar at the top of the <code>ForEach</code> region.  The difference to a <code>GridSpread</code> is that we are more flexible to change maybe one spread type to <code>RandomSpread</code> and leave the other axis of the grid as it is.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/Dictionary/","title":"Dictionary","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/Dictionary/#dictionary","title":"Dictionary","text":"<p>Dictionaries are collections that contain key/value pairs. They can contain the same key only once in the collection. They don't maintain the order of its items.</p> <p>To add an item we use <code>AddItem</code> node. If the key already exists in your dictionary it will throw an error. Be aware that the keys are case sensitive so it matters if they are uppercase or lowercase. With <code>ToLower</code> we can assure they are all lowercase.</p> <p>To update value of a key we can use <code>SetItem</code>. It also adds an item to the dictionary if the key doesn't exist yet in the dictionary.</p> <p>With <code>Remove</code> we delete an element from the dictionary.</p> <p>The <code>Clear</code> allows us to delete all elements of the dictionary at once.</p> <p>To get single data out of a dictionary you can use <code>TryGetValue</code> and <code>TryGetKey</code>. If you want to get all you can use <code>Keys</code> and <code>Values</code>. Another way is to use <code>ForEach</code> loop and use <code>Split(KeyValuePair)</code>.</p> <p></p> <p>If you want multiple values use <code>TryGetValues</code></p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/Dictionary/#sorted-dictionary","title":"Sorted Dictionary","text":"<p>As mentioned above dictionaries normally don't keep the order of their elements. VL has under Advanced nodes <code>SortedDictionary</code> that maintains order of the elements but it is not as performant as normal <code>Dictionary</code></p> <p>To set type of the key/value pair in dictionary you need to separate it with comma - <code>Dictionary&lt;String,Float32&gt;</code>.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/ForEach/","title":"ForEach","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/ForEach/#foreach","title":"ForEach","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/ForEach/#defining-which-elements-to-keep","title":"Defining which elements to keep","text":"<p>The <code>Keep</code> node in the <code>ForEach</code> region allows us to select which elements we want to stay and which to ignore. The output of the iteration gets plugged into the <code>Keep</code> and we pass the Splicer Input into the Splicer Output.</p> <p>To remove elements when out of the spread when certain state is true. </p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/ForEach/#naming-splicer","title":"Naming Splicer","text":"<p>We can name the input &amp; output splicers of the <code>ForEach</code> by double clicking the rectangle right from the splicer. Naming inputs and outputs improves readability and understanding.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/HashSets/","title":"HashSets","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/HashSets/#hashsets","title":"Hashsets","text":"<p>Hashsets works similar to the keys in dictionaries. For more information about dictionaries look here. The use case for <code>HashSet</code> is when you have a collection where you can have an item exactly once. For example an iventory. You only have one item in it and you just want one amount and you don't want to create a new entry.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/JoinMultipleSpreadsConcat/","title":"JoinMultipleSpreadsConcat","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/JoinMultipleSpreadsConcat/#join-multiple-spreads","title":"Join Multiple Spreads","text":"<p>We can use a <code>Concat</code> node to join multiple Spreads together. With <code>Ctrl + +</code> we can add more entries to add more spreads.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/OrderingSpreadValuesWithOrderBy/","title":"OrderingSpreadValuesWithOrderBy","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/OrderingSpreadValuesWithOrderBy/#ordering-spread-values-with-orderby","title":"Ordering Spread Values with OrderBy","text":"<p>A <code>OrderBy</code> Region allows us to order the elements of a Spread. We have to define in the <code>OrderBy</code> what to sort for.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/RandomOrderElementsSpread/","title":"RandomOrderElementsSpread","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/RandomOrderElementsSpread/#random-order-of-elements-in-spread","title":"Random Order of Elements in Spread","text":"<p>If we want to randomize the order of the elements in a spread we can use the <code>Randomizer</code> node.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/RepeatingSequenzNumbers/","title":"RepeatingSequenzNumbers","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/RepeatingSequenzNumbers/#repeating-a-sequence-of-numbers","title":"Repeating a Sequence Of Numbers","text":"<p>If you have a sequence of numbers that you want to repeat over a certain amount of times or to a certain length of entries we can use <code>ResampleRepeat</code>.</p> <p>Another way is to use a <code>Repeat</code> area and then assign values depending of the Modulo of the index.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/ReplaceMultipleSlicesSpreadForEach/","title":"ReplaceMultipleSlicesSpreadForEach","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/ReplaceMultipleSlicesSpreadForEach/#replace-multiple-slices-in-spread-with-for-each","title":"Replace Multiple Slices in Spread With For Each","text":"<p>If we want to replace not just one single slice but multiple we can use a <code>ForEach</code> region with a <code>SetSlice</code> inside. We then create two spreads for the new values that we want to set and at which index we want to set these.</p> <p>Download Example File</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/_ManagingSpreadOperationsInForEach/","title":"ManagingSpreadOperationsInForEach","text":"","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/Collections/_ManagingSpreadOperationsInForEach/#managing-spread-operations-in-foreach","title":"Managing Spread Operations In ForEach","text":"<p>If we want to execute code inside a <code>ForEach</code> Region that needs the Spread itself as an input to manipulate the data we use the <code>Accumulator</code> instead of the <code>Splicer</code> of the for each.</p>","tags":["VVVV","VVVV/Collections"]},{"location":"VVVV/HandlingDataAndValues/","title":"Handling Data and Values","text":"<p>Create Int2 From Two Single Ints</p> <p>Datatype Conversion</p> <p>Extract Single Value From 2D.Rectangle Datatype</p> <p>From Random Value To Random Color</p> <p>Holding Last Changed Value</p> <p>OOP</p> <p>Round Float To Digits</p> <p>Send and Receive Data</p> <p>String Manipulation</p> <p>Ticket System</p> <p>Type Flexibility</p> <p>Wrap Value At Maximum Value with MOD</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/Accumulators/","title":"Accumulators","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/Accumulators/#accumulators","title":"Accumulators","text":"<p>We can use Accumulators when we want to pass on the result from the first iteration to the execution of the next iteration. </p> <p>In this case the Accumulator works similar to a feedback loop which always feeds back the result of the previous iteration.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/CreateInt2FromSingleInt/","title":"CreateInt2FromSingleInt","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/CreateInt2FromSingleInt/#create-int2-from-two-single-ints","title":"Create Int2 From Two Single Ints","text":"<p>Nodes like the <code>RenderTexture</code> need a the <code>Int2</code> datatype to set the size. To create a <code>Int2</code> out of two single integer values we use a <code>Int2(Create)</code>.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/DatatypeConversion/","title":"Datatype Conversion","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/DatatypeConversion/#implicit-conversions","title":"Implicit conversions","text":"<p>We can directly convert from integer to float but now the other way around. We also can directly convert boolean to integer and float.</p> <p>Implicit Type Conversion Img</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/DatatypeConversion/#explicit-conversion","title":"Explicit conversion","text":"<p>Explicit means that we have a specific node to convert the type.</p> <p>Explicit Type Conversion Img</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/ExtractSingleValueFrom2DRectangleDatatype/","title":"ExtractSingleValueFrom2DRectangleDatatype","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/ExtractSingleValueFrom2DRectangleDatatype/#extract-single-value-from-2drectangle-datatype","title":"Extract Single Value From 2D.Rectangle Datatype","text":"<p>The <code>2D.Rectangle</code> Datatype contains multiple values like TopLeft Position, Size and Center. If you want to extract a single part of the datatype you can use the 2D.Rectangle Nodes <code>Center</code>, <code>Size</code>. There are also nodes for other positions of the rectangle like <code>Left</code>, <code>Right</code>, <code>TopCenter</code> and more.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/FromRandomValueToRandomColor/","title":"FromRandomValueToRandomColor","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/FromRandomValueToRandomColor/#from-random-value-to-random-color","title":"From Random Value To Random Color","text":"<p>We can use <code>RandomSpread</code> data to assign predefined colors in a random distribution. We <code>Round</code> the data to get an Integer Index for the <code>Switch</code>.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/HoldingLastChangedValue/","title":"HoldingLastChangedValue","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/HoldingLastChangedValue/#holding-last-changed-value","title":"Holding Last Changed Value","text":"<p>In a situation where we want to have the last changed value from couple of inputs we can use a <code>LTP</code> node which stands for Last Takes Precedence.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/","title":"OOP","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#mutability","title":"Mutability","text":"<p>Mutable objects can change - when updating mutable objects the same memory gets mutated</p> <p>Immutable objects can't change - updating immutable objects creates a new copy of the object.</p> <p></p> <p>We also can see visually the difference. Links of mutable objects are dotted. The dashed lines mean that a reference to an object is passed.</p> <p>If you create two pads from your <code>Record</code> you create two independent instances - if you change one the other instance doesn't get changed.</p> <p>If you create two pads of a class - even with different names - they both reference the same instance and will affect the same instance.</p> <p>Records must be explicitly stored to update them. Classes don't because we always pass the reference to that instance.</p> <p></p> <p>The advantage of class over record is when you have child objects inside your datatype and you only want to change a child state - with a <code>Class</code> you reference the child update operation. With a <code>Record</code> you would have to reconstruct the whole object to be able to store the changes for the child back into the <code>Record</code>. There is <code>TryReplaceDecendant</code> which allows you to repack the object in <code>Record</code>.</p> <p>In general try to avoid parallel execution of operations. Use top to bottom flow.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#overwriting-properties-in-instance","title":"Overwriting properties in instance","text":"<p>You can create new operations to overwrite the values of the properties in the record or class.</p> <p></p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#change-detection","title":"Change detection","text":"<p>If you have expensive processes it makes sense to only execute these when needed. We trigger these operations if a change of the object is detected.</p> <p>On Records changes of data can be detected with <code>Changed</code>. With Class objects <code>Changed</code> ony detects if a new class instance is assigned/created.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#detection-of-changes-in-classes","title":"Detection of changes in classes","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#workaround-1","title":"Workaround 1","text":"<p>A way to detect changes in classes is to use <code>BehaviorSubject</code> reference which notifies subscribers when it has an update for the subscribers.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#workaround-2","title":"Workaround 2","text":"<p>The other way is to implement a ticket system. Look here for more information.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#order-of-operation","title":"Order Of Operation","text":"<p>When we work with classes wee don't have to store the changes back into a pad. This allows us to execute operations in parallel. But to avoid problems with the order classes should also use the top to bottom data flow.</p> <p>With Records we always have to store the changes back into the pad so parallel execution of operations is not possible. </p> <p>Another way to specify the order of operation is when you have your classes operating as a process node. Then you can change the order of operation inside the process node menu by dragging them up and down.</p> <p>To specify the order of operation in classes we also can use <code>Do</code> regions. They are executing code inside the region before anything else connected to the region. So it allows us to handle or store data in a certain stage of execution.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#undo-changes-of-record","title":"Undo Changes Of Record","text":"<p>We can use <code>Undo</code> node to store certain states and trigger an undo action to jump back to previously pushed states.</p> <p></p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#advanced","title":"Advanced","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#create-reference-of-record","title":"Create Reference of Record","text":"<p>If you want to have the flexibility with references for your record you can use <code>Create(Reference)</code>.</p> <p></p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#take-snapshop-of-record-state","title":"Take snapshop of Record state","text":"<p>When we update a <code>Record</code> it creates a new copy that get's stored back into the pad. This allows us to ccreate snapshots of these copies.</p> <p></p> <p>In Classes we would get a snapshot of the reference which would give us the current instance of the class.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#inheritance-and-interfaces","title":"Inheritance and Interfaces","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#inheritance","title":"Inheritance","text":"<p>Inheritance allows parent-child relationship between objects. The children are more specilized version of the objects that inherit functionality and properties from the parent. In VL we can't create inheritance.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#interfaces","title":"Interfaces","text":"<p>Interfaces are special definitions that contain signatures of methods you want to share among different classes. An interface is like a rule that says:\"You need to have this property and this method\" to be able to subscribe to this interface.</p> <p>Multiple objects can implement multiple interfaces and share functionality.</p> <p>Interfaces start with a capital <code>I</code> like <code>IEnumerable</code>. <code>IEnumerable</code> is renamed to <code>Sequence</code> in VL. It allows the iteration over a collection of objects. Interfaces can be inherited in VL.</p> <p>To implement an interface in a class or Record you have to go inside their definition and on the left side in the Patch Explorer you can add interfaces.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#upcasting-and-downcasting","title":"Upcasting and Downcasting","text":"<p>Upcasting and Downcasting is about how to convert between parent and child classes.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#upcasting","title":"Upcasting","text":"<p>From specialized to general type. Inheritance: child to parent Interfaces: object to interface</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#downcasting","title":"Downcasting","text":"<p>From general type to specialized type. Inheritance: Parent to child Interfaces: Interface back to original object</p> <p>For that we can use <code>CastAs</code> node.</p> <p>Downcasting Img</p> <p>Success event triggers the execution of the if because we only wants this to happen if the casting works.</p> <p>Casting only tells the compiler to treat a type as another type. It doesn't actually change the type.</p> <p>There is also a <code>HardCast</code> It gives an error when something is wrong with casting.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#filtering-out-types-of-sequence","title":"Filtering out types of sequence","text":"<p><code>OfType</code> executes a <code>CastAs</code> on every item in a collection and only the ones that pass it get kept in the collection. It returns an empty collection if nothing matches the type of the downstream operation.</p> <p>Downcasting Img</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#old","title":"Old","text":"<p>VVVV has different ways to create your own datatypes and objects. They allow you to define fields and operations.</p> <p>In VVVV there are: - mutable datatypes - object can be changed after creation - immutable datatypes - object cannot be changed after creation</p> <p>The <code>Create</code> operation is the Constructor of your datatype - it creates instances of your datatype.</p> <p> If you use <code>Create</code> operation constantly it overwrites the object on every frame. To execute the <code>Create</code> of the datatype only once we can assign the <code>Create</code> of our datatype to the <code>Create</code> operation of our patch. We then can store it into the a <code>Pad</code>. After that the data can be updated and stored back into the <code>Pad</code> again.</p> <p></p> <p>The <code>Split</code> operation makes the data from inside the datatype available on the outside.</p> <p>If we are updating the values of our datatype we can't store the changes directly inside the datatype. We have to store the changes back into a <code>Pad</code> to have the changes stores and applied.</p> <p>With <code>Classes</code> you don't need to store the changes back into a Pad. Classes are mutable datatypes so the can be changed after creation. For example if we have a collection like a spread of instances of our class we don't need to store the changes back into the spread afterwards.</p> <p>You create an instance in the <code>Create</code> and then you can run update without restoring the changes. The update mutates the original data instance.</p> <p>You use <code>Records</code> we you work with a top to bottom dataflow.</p> <p>You use <code>Class</code> when you have a storage of objects and you want to run some operations on them and keep their own state.</p> <p>For performance it is more effective to not copy some complex object each time it is changed.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/OOP/#naming-outputs-class","title":"Naming Outputs Class","text":"<p>When we create an output in the class that is only for one operation outside of it we name the output like the property that is exposed to the outside like GetPosition.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/Object/","title":"Object","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/Object/#object","title":"Object","text":"<p><code>Object</code> is the base data type of every type in C#. It is the parent and everything else inherits from it. Most of the time avoid using the data type because it is to general. Just sometime at runtume we want to say This could be anything and at compile time we can define specifically with <code>CastAs</code> what type it should be.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/RoundFloatsToDigits/","title":"RoundFloatsToDigits","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/RoundFloatsToDigits/#round-float-to-digits","title":"Round Float To Digits","text":"<p>The <code>Round(Digits)</code> allows us define to which digit behind the decimal point we want to round a float. We also can use <code>Floor</code>(down to next integer) or <code>Ceil</code>(up to next integer) node to round values.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/SendReceive/","title":"SendReceive","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/SendReceive/#send-and-receive-data","title":"Send and Receive Data","text":"<p>If you want to pass values inside your patch without having to connect them via links or you want to have a value inside a <code>Process</code> node from outside without needing to add inputs to the node etc. you can use <code>Send(Global)</code> node and <code>Receive(Global)</code>. Just choose own channel name for each value. The good thing is that this has no frame delay between sending and receiving.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/StringManipulation/","title":"Sting Manipulation","text":"<p><code>Trim</code> reduces white space in string.</p>","tags":["VVVV","VVVV/DataAndValues","VVVV/String"]},{"location":"VVVV/HandlingDataAndValues/TicketSystem/","title":"TicketSystem","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/TicketSystem/#ticket-system","title":"Ticket System","text":"<p>A ticket system allows us to signal triggers inside a single class/object to notify certain operations that change has happened. For example you tell some operation to recalculate something when that ticket has been changed.</p> <p>We create a primitive value like Integer as a property. Every operation that should result a downstream draw call or other changes increments the value of the ticket.</p> <p></p> <p>Downstream we detect if the ticket integer has changed.</p> <p></p> <p>We also then can use different tickets to track different changes.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/TypeFlexibility/","title":"Type Flexibility","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/TypeFlexibility/#generics","title":"Generics","text":"<p>Generics are like a blueprint that allows to use the same functionality for different data types. Practically it means that we can use the same node for different data types. These generic nodes are grayed out when we place them in the patch because they wait to receive the data type the should operate on.</p> <p></p> <p>To set the data type for the generic node we can double click on the node.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/TypeFlexibility/#generic-functions","title":"Generic Functions","text":"<p>If you want to create a generic function that can act on different data types as inputs you can use <code>Operation</code>.</p> <p></p> <p>To make an <code>Operation</code> generic you have to click on the square under the O of the operation. This allows to set the inner context of the operation by the inputs and outputs(outer context) of the operation.</p> <p></p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/TypeFlexibility/#overloading","title":"Overloading","text":"<p>Overloading is another concept of type flexibility. It allows to have the same name for operations as along as they have different signatures. A signature is a unique identifier of that operation which includes:</p> <p>In this context, signature refers to the unique identifier of a method, which includes: - Method name - Number of parameters - Types of parameters - Order of parameters</p> <p></p> <p>Different pin names don't result to a unique identifier</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/WrapValueAtMaxValueMOD/","title":"WrapValueAtMaxValueMOD","text":"","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/HandlingDataAndValues/WrapValueAtMaxValueMOD/#wrap-value-at-maximum-value-with-mod","title":"Wrap Value At Maximum Value with MOD","text":"<p>For values that are continuously rising or counting up we can use a <code>MOD</code> node to wrap it at our desired maximum value and let it start again from 0.</p>","tags":["VVVV","VVVV/DataAndValues"]},{"location":"VVVV/Libraries/UsefulLibraries/","title":"UsefulLibraries","text":"<ul> <li>VVVV comments: true</li> </ul>"},{"location":"VVVV/Libraries/UsefulLibraries/#useful-libraries","title":"Useful Libraries","text":"<p><code>VL.IO.NDI</code> - video streaming</p> <p><code>VL.ExtendedTutorials</code> - Very intresting <code>VL.PolyTools</code> - Tools for working with polygons and polypaths in vvvv gamma. <code>VL.MiDi.Music.Utils</code> - MIDI</p> <p><code>VL.BadMapper</code> - Mapping <code>VL.DomeMaster</code> - DomeMapping <code>VL.IO.Firmata</code> <code>VL.Geo</code> working with geo data <code>VL.IO.ArtNet</code> <code>VL.ScreenRecorder</code> <code>VL.IO.Xbox360Controller</code> <code>VL.GenerativeGestaltung</code> <code>VL.Flex.Skia</code> <code>VL.JSON</code> <code>VL.FastNoise</code> <code>VL.SharpNoise</code> <code>VL.2D.Voronoi</code> <code>VL.SuperMonitor</code> <code>VL.ILDA</code> laser control <code>VL.IO.Net.Email</code> <code>VL.ScalableDisplay</code> <code>VL.Mapper</code> <code>VL.SocketIO</code> <code>VL.Markov</code> markov chain generatrer <code>VL.Devices.ENTTEC</code> <code>VL.PDFReader</code> <code>VL.Nvidia.CUDA</code> <code>VL.Ollama</code> <code>VL.IO.PLY</code> - Load PLY files into vvvv <code>nuget install VL.IO.PLY -pre</code></p> <p><code>VL.2D.CurveFitting</code> - Create 2D paths</p>"},{"location":"VVVV/ManagingPrograms/","title":"Managing Programs","text":"<p>Async</p> <p>Cache Region</p> <p>Creating Own Dependency</p> <p>Dependency</p> <p>Operations</p>"},{"location":"VVVV/ManagingPrograms/Async/","title":"Async","text":"","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/Async/#async","title":"Async","text":"<p>If we want to execute some behavior asynchronously on the side, while the program continues running, we can use a <code>Async Loop</code> or <code>Async Task</code>. Async behavior avoids freezing of the application.</p> <p>An <code>Async Task</code> gets executed only once on a <code>Bang</code> event. <code>Async Loop</code> runs continuously -  as fast as it can</p> <p><code>IsAssigned</code> gives back true if new value after execution is assigned, which allows to only show something if new value got assigned.</p> <p>The Async regions also have the <code>In Progress</code> outputs which allow us to execute/show information while the async task is working and we want to show for example a loading screen.</p> <p><code>HoldLatest</code> keeps the last value it got from the async operation - until a new value comes.</p> <p>The <code>Sampler</code> shows a value for one frame and has a <code>OnData</code> output which can be useful to trigger for example if conditions.</p> <p>If you work with <code>Aync</code> operations that change your objects you have to work with immutable objects.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/Async/#multiple-outputs","title":"Multiple outputs","text":"<p>In <code>Async Loop</code> o <code>Async Task</code> if you want to output more than one value you either want to have a <code>Record</code>with your own datatype or you use <code>Tuple(Create)</code>.</p> <p></p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CacheRegion/","title":"CacheRegion","text":"","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CacheRegion/#cache-region","title":"Cache Region","text":"","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CacheRegion/#clean-up-cache-region","title":"Clean up Cache Region","text":"<p>In the <code>Cache</code> region we have <code>Dispose Cached Outputs</code> trigger to clean up objects in the <code>Cache</code>that still might be in there but not needed anymore.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CreatingOwnDependency/","title":"Creating Own Dependency","text":"<p>To create your own dependency that you then can use in other projects you create your own nodes on the definition side of your dependency patch.</p> <p>It is important that you don't set them on the application side of the patch. Otherwise it is always opening up the application side when you reference your dependency.</p> <p>You can name your dependency on the definition side on the top left corner where <code>[main]</code> is written.</p> <p>If you want that certain parts of your dependency nodes are shown in a category in the node browser you can create your own categories by looking for <code>Category</code> in the node browser. They are always starting with a dot.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CreatingOwnDependency/#dependency","title":"Dependency","text":"<p>A dependency allows a document to access definitions from another document. This enables you to do build more modular programs where certain definitions and functionality is spread over different files that only contain specific logic.</p> <p>To create a dependency: - Create a file with only definitions of processes. - Add dependency in base file: Dependencies -&gt; Files -&gt; Add Existing</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CreatingOwnDependency/#organizing-dependency-with-category","title":"Organizing Dependency with Category","text":"<p> To create a more structured order of your dependency you can use a <code>Category</code> inside the node browser. This allows to group and organize some sub logic inside of it. Start the name of your category with a <code>.</code>. Each Category gets its own folder in the node browser.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CreatingOwnDependency/#organizing-dependency-with-group","title":"Organizing Dependency with Group","text":"<p><code>Group</code> allows visual organization of the dependency site without actually organizing them in the node browser. So the nodes don't appear in folders in the node browser.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/CreatingOwnDependency/#forwarding-libraries","title":"Forwarding Libraries","text":"<p>If you have a sub dependency to our own definitions and we want to make it accessible to the main application in another file we can set the sub dependency as forward dependencies</p> <p>More you can find here</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/Dependency/","title":"Dependency","text":"<p>A dependency allows a document to access definitions from another document. This enables you to do build more modular programs where certain definitions and functionality is spread over different files that only contain specific logic.</p> <p>To create a dependency: - Create a file with only definitions of processes. - Add dependency in base file: Dependencies -&gt; Files -&gt; Add Existing</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/Dependency/#organizing-dependency-with-category","title":"Organizing Dependency with Category","text":"<p>To create a more structured order of your dependency you can use a <code>Category</code> inside the node browser. This allows to group and organize some sub logic inside of it. Start the name of your category with a <code>.</code>. Each Category gets its own folder in the node browser.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/Dependency/#organizing-dependency-with-group","title":"Organizing Dependency with Group","text":"<p><code>Group</code> allows visual organization of the dependency site without actually organizing them in the node browser.</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/ManagingPrograms/Operations/","title":"Operations","text":"<p>If you have the same logic that happens in multiple places in you patch you can create operations. They just process data. They can't store any data.</p> <p>Operations need input and output</p>","tags":["VVVV","VVVV/ManagingPrograms"]},{"location":"VVVV/Output/","title":"Output","text":"<p>Set WindowState of Application</p>","tags":["VVVV","VVVV/Output"]},{"location":"VVVV/Output/SetWindowStateApp/","title":"SetWindowStateApp","text":"","tags":["VVVV","VVVV/Output"]},{"location":"VVVV/Output/SetWindowStateApp/#set-windowstate-application","title":"Set WindowState Application","text":"<p>We can change the states of our windows with the <code>SetWindowState</code> node. We need to activate the <code>VL.Corelib.Windows</code> package. This allows us then to set our window as fullscreen, rename the window, define if the size is changeable and more.</p>","tags":["VVVV","VVVV/Output"]},{"location":"VVVV/SKIA/","title":"SKIA","text":"<p>Simple Skia Feedback Effect</p> <p>General Skia</p>"},{"location":"VVVV/SKIA/GeneralSkia/","title":"General Skia","text":"<p>When you draw with Skia a common way is to only update the drawing when certain values change. So we put the drawing inside a <code>Cache</code> Region.</p>","tags":["VVVV","VVVV/Skia"]},{"location":"VVVV/SKIA/SimpleSkiaFeedbackEffect/","title":"SimpleSkiaFeedbackEffect","text":"","tags":["VVVV","VVVV/Skia","VVVV/FX"]},{"location":"VVVV/SKIA/SimpleSkiaFeedbackEffect/#simple-skia-feedback-effect","title":"Simple Skia Feedback Effect","text":"<p>To create a SKIA feedback effect you render the output but you also create a second <code>Renderer(Offscreen)</code> connected to a <code>FrameDelay</code> which you then feed back into a <code>Group</code> with the desired transformations and changes.</p> <p>Download Example File</p>","tags":["VVVV","VVVV/Skia","VVVV/FX"]},{"location":"VVVV/Stride/","title":"Stride","text":"<p>Avoid Animating Mesh Parameters</p> <p>Custom Post FX</p> <p>Draw Normals Of Mesh</p> <p>Instancing Shapes in Stride</p> <p>Store Texture In Queue</p>"},{"location":"VVVV/Stride/AvoidAnimatingMeshParameters/","title":"AvoidAnimatingMeshParameters","text":"","tags":["VVVV","VVVV/Stride","VVVV/FX","VVVV/Performance"]},{"location":"VVVV/Stride/AvoidAnimatingMeshParameters/#avoid-animating-mesh-parameters","title":"Avoid Animating Mesh Parameters","text":"<p>If we animate the parameter of a mesh parameter like <code>Size</code> in the <code>Box</code> node in the background vvvv hast to rebuild the whole geometry which can be expensive for the performance.  It is better to animate the Size by using a <code>TransformSRT</code> node and set the Scaling. This is just a multiplication in the background which is more performant.</p>","tags":["VVVV","VVVV/Stride","VVVV/FX","VVVV/Performance"]},{"location":"VVVV/Stride/CustomPostFX/","title":"CustomPostFX","text":"","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/CustomPostFX/#create-custom-postfx","title":"Create Custom PostFX","text":"<p>Besides the Standard PostFX we also can create our own custom post fx. For that we need <code>CustomPostFX</code> region from Stride. The <code>ColorBuffer(PostFXDrawContent)</code> gives us the currently renderer frame. In the Region we then can apply different texture effects.</p> <p>Download Example File</p>","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/DrawNormalsMesh/","title":"DrawNormalsMesh","text":"","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/DrawNormalsMesh/#draw-normals-of-mesh","title":"Draw Normals Of Mesh","text":"<p>If we want to draw the normals of a mesh in Stride we first have to split the mesh with <code>MeshSplit(Pos3Norm3)</code> and in the <code>ForEach</code> Region we convert the vec3 position values into vector4 and add the color value as the W values. For the extracted normals, inside the <code>ForEach</code> we add them with the position vector3. Similar to the position the normal vector3 gets converted into vector4 with the color as the W value. </p> <p>The flattened values from the <code>ForEach</code> get used as the input for a <code>DynamicMesh</code> node. <code>LineList</code> as the primitive type of the <code>DynamicMesh</code> gives us then the normals. We need to use <code>Pos4</code> node for the <code>VertexDeclaration</code> input of the <code>DynamicMesh</code>.</p> <p>As the color shader for the <code>MeshRenderer</code> we use <code>WColorShader</code>.</p> <p>Download Example File</p>","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/InstancingInStride/","title":"InstancingInStride","text":"","tags":["VVVV","VVVV/Stride"]},{"location":"VVVV/Stride/InstancingInStride/#instancing-shapes-in-stride","title":"Instancing Shapes in Stride","text":"<p>If you want to instance a shape in Stride we first create the shape that we want to instance. We then can input the position data for the instances into the Components Input of the shape.</p> <p>To be able to use the data from a spread as transformation data for the instances we need to convert the data from the spread into transformation data and then recollect it into <code>InstancingSpreadComponent</code>. The <code>FromValue</code> then constructs a spread that we need in the Components input.</p> <p>To translate all the instances we can plug 3D transformation nodes like <code>Scale(3D)</code>,<code>Translate(3D)</code> etc. into the Transformation Input of the base shape.</p> <p>Example patch is available in the Help Browser in VVVV</p>","tags":["VVVV","VVVV/Stride"]},{"location":"VVVV/Stride/InstancingInStride/#setting-material-values-for-each-instance","title":"Setting material values for each instance","text":"<p>If we want to create different material properties for each instance we can use <code>ColorPerInstance</code> and <code>ValuePerInstance</code> and plug them into the material node. </p>","tags":["VVVV","VVVV/Stride"]},{"location":"VVVV/Stride/StoreTextureInQueue/","title":"StoreTextureInQueue","text":"","tags":["VVVV","VVVV/Stride"]},{"location":"VVVV/Stride/StoreTextureInQueue/#store-texture-in-queue","title":"Store Texture in Queue","text":"<p>We can use <code>TextureQueue</code> and feed it the texture that we want to store. Afterwords we can use <code>Quadrenderer</code> to show each stored Texture. We need to activate the <code>VL.Stride.TextureFX</code> package to get the <code>TextureQueue</code></p>","tags":["VVVV","VVVV/Stride"]},{"location":"VVVV/Stride/FX-Gallery/","title":"FX Gallery","text":"<p>Simple Feedback Trails with Lighten</p> <p>Very Slow Texture Blend</p>"},{"location":"VVVV/Stride/FX-Gallery/SimpleFeedbackTrails/","title":"SimpleFeedbackTrails","text":"","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/FX-Gallery/SimpleFeedbackTrails/#simple-feedback-trails-with-lighten","title":"Simple Feedback Trails with Lighten","text":"<p>The <code>Lighten</code> blend operation allows us in a feedback loop to create a simple feedback trail effect.</p> <p>Download Example File</p>","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/FX-Gallery/VerySlowTextureBlend/","title":"VerySlowTextureBlend","text":"","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/Stride/FX-Gallery/VerySlowTextureBlend/#very-slow-texture-blend","title":"Very Slow Texture Blend","text":"<p>If we want to overlay a texture very slowly with a new texture we can create Feedback Loop and send <code>Blend</code> to <code>Over</code> and the Fader to 0.01</p>","tags":["VVVV","VVVV/Stride","VVVV/FX"]},{"location":"VVVV/UI/","title":"UI","text":"<p>IMGui Basics</p> <p>Toggle ImGUI Window on DoubleClick</p>"},{"location":"VVVV/UI/ImGUIBasics/","title":"ImGUIBasics","text":"","tags":["VVVV","VVVV/UI","VVVV/ImGUI"]},{"location":"VVVV/UI/ImGUIBasics/#imgui-basics","title":"ImGUI Basics","text":"<p>To show <code>ImGUI</code> in Skia or Stride we need to install the dependencies <code>VL.IMGUI.Stride/Skia</code>. </p> <p>You then put all the UI elements in an <code>IMGUI Region</code>. The <code>Region</code> has a render output at the bottom which we then need to connect to <code>RenderEntity</code> in Stride. To show the UI over the Stride content we need to set at the <code>RenderEntity</code> <code>Renderstage</code> to <code>After Scene</code>.</p> <p>Inside the <code>Region</code> we then place our <code>ImGUI Widgets</code> like <code>Slider</code> or <code>Button</code>. They need to be chained into each other.</p> <p>We can also visually group our UI widgets in the <code>Window</code> node.</p>","tags":["VVVV","VVVV/UI","VVVV/ImGUI"]},{"location":"VVVV/UI/ToggleImGUIWindowDoubleClick/","title":"ToggleImGUIWindowDoubleClick","text":"","tags":["VVVV","VVVV/UI","VVVV/ImGUI"]},{"location":"VVVV/UI/ToggleImGUIWindowDoubleClick/#toggle-imgui-window-on-double-click","title":"Toggle ImGUI Window On Double Click","text":"<p>So to be able to hide and show a <code>Window</code> in ImGUI we can use <code>IsMouseDoubleClicked</code> with <code>Toggle</code> and set it as the input for <code>Visible</code>. Every time a double click happens the window gets shown or hidden.</p>","tags":["VVVV","VVVV/UI","VVVV/ImGUI"]},{"location":"blog/","title":"Blog","text":"<p>This is a blog of things that I learned and things that I created and want to share with other artists and creators.</p>"},{"location":"blog/2025/04/14/25-04-14---002/","title":"25-04-14 - 002","text":"See the Pen    P5 -  25-04-14 - 002 by levoxtrip (@levoxtrip)   on CodePen.","tags":["TIC","P5"]},{"location":"blog/2025/04/14/25-04-14---001/","title":"25-04-14 - 001","text":"See the Pen    Untitled by levoxtrip (@levoxtrip)   on CodePen.","tags":["TIC","P5"]},{"location":"blog/2025/06/22/25-06-22---today-i-learned/","title":"25-06-22 - Today I Learned...","text":"<p>Today I went to a TouchDesigner Workshop about PointClouds. </p>","tags":["TIL"]},{"location":"blog/2025/06/25/25-06-25---today-i-learned/","title":"25-06-25 - Today I Learned...","text":"<p>I learned the hard way that you should run your python and AI projects in a virtual environment so they don't create problems with other dependencies. <code>python -m venv env</code> with env as the name for the environment.</p> <p>To run the environment you write <code>env\\Scripts\\activate.bat</code> or <code>env\\Scripts\\activate</code>.</p> <p>With <code>deactivate</code> we simply can deactivate the virtual environment.</p> <p>The packages and dependencies that we used in the environment we then can save in a <code>requirements.txt</code> file so if somebody else uses the project they can download themselves without us sending the dependencies. <code>pip freeze &gt; requirements.txt</code></p>","tags":["TIL","PYTHON"]},{"location":"blog/2025/06/25/25-06-25---today-i-learned/","title":"25-06-25 - Today I Learned...","text":"<p>Today I learned again how to set the right path for your python version.</p> <ol> <li> <p>Find the Python installation path.</p> </li> <li> <p>Add the Path to Windows:</p> </li> <li><code>Win+R</code> and <code>sysdm.cpl</code> to open the system window.</li> <li>Go to Advanced Tab and Environment Variables</li> <li>Under System Variables find Path -&gt; Edit</li> <li>New and add the path to your Python</li> <li> <p>Also add the path to the Scripts folder in the python folder.</p> </li> <li> <p>Restart terminal</p> </li> </ol>","tags":["TIL","PYTHON"]},{"location":"blog/2025/07/14/25-07-14---today-i-added/","title":"25-07-14 - Today I Added...","text":"<p>Simple Tile Displace of Image</p> <p>Count Up On New Circle</p>","tags":["NewEntries","TIA"]},{"location":"blog/2025/07/14/25-07-15---today-i-learned/","title":"25-07-15 - Today I Learned...","text":"<p>When you want do reduce the amount of digits after the dot in a decimal value we can use the <code>round(val,amountDigits)</code> function.</p>","tags":["TIL","PYTHON"]},{"location":"blog/2025/07/14/25-07-15---today-i-added/","title":"25-07-15 - Today I Added...","text":"<p>Get Height From TOP</p> <p>Count Up On New Circle</p> <p>Set Cook Flag Operator</p> <p>Reference Data From DAT</p> <p>Let VAlue Slowly Decrease</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/07/14/25-07-15---today-i-learned/","title":"25-07-15 - Today I Learned...","text":"<p>If you have multiple levels of <code>ForEach</code> in VVVV and you pipe spread data through each level, you need to flatten the <code>Spread</code> in each <code>ForEach</code>.</p> <p>Don't forget to pipe the values through the <code>if</code> otherwise they will not be saved.</p> <p>You can't just add an element in a spread like in javascript. You first have to create the entry in the spread so there is space to add an actual value.</p>","tags":["TIL","VVVV"]},{"location":"blog/2025/07/17/25-07-17---today-i-added/","title":"25-07-17 - Today I Added...","text":"<p>Execute Code When Parameter Changes in COMP</p> <p>Store Presets in Table</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/07/17/25-07-17---today-i-learned/","title":"25-07-17 - Today I Learned...","text":"<p>Whe you work with classes and you create instances in the <code>Create</code> operation you need to restart the patch to see if the creation of the instances worked.</p> <p>In OOP in VVVV the properties taht you create in the object don't have to come out of the pad where you create the property. You can reuse the pad in another part.</p>","tags":["TIL","VVVV"]},{"location":"blog/2025/07/19/25-07-19---today-i-added/","title":"25-07-19 - Today I Added...","text":"<p>Convert Negative Values Into Positive</p> <p>Define How Long CountCHOP Cant Be Retriggered</p> <p>Execute Code When Parameter in COMP Changes</p> <p>Store Presets In Table</p> <p>Step CHOP Values With LimitCHOP</p> <p>Assure CHOP Values Stay in Range</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/07/23/25-07-23---today-i-added/","title":"25-07-23 - Today I Added...","text":"<p>Open Window Automatically On Start</p> <p>Feedback Distortion With LensDistort</p> <p>Perform Mode</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/07/28/25-07-28---today-i-added/","title":"25-07-28 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/07/28/25-07-28---today-i-added/#td","title":"TD","text":"<p>Change Coloring TOP Texture Warhol Effect</p>","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/07/28/25-07-28---today-i-added/#vvvv","title":"VVVV","text":"<p>Repeating Sequenz of numbers</p> <p>Custom PostFX</p> <p>Simple Feedback Trail</p>","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/07/29/25-07-29---today-i-added/","title":"25-07-29 - Today I Added...","text":"","tags":["NewEntries","TIA","TD","Unity","VVVV"]},{"location":"blog/2025/07/29/25-07-29---today-i-added/#td","title":"TD","text":"<p>Reference Values with Math Library</p> <p>Null Operation</p> <p>Join Rows With MergeDAT</p>","tags":["NewEntries","TIA","TD","Unity","VVVV"]},{"location":"blog/2025/07/29/25-07-29---today-i-added/#unity","title":"Unity","text":"<p>Ray Timer</p> <p>Measure how long a process in code takes</p>","tags":["NewEntries","TIA","TD","Unity","VVVV"]},{"location":"blog/2025/07/29/25-07-29---today-i-added/#vvvv","title":"VVVV","text":"<p>Join Multiple Spreads With Concat</p>","tags":["NewEntries","TIA","TD","Unity","VVVV"]},{"location":"blog/2025/07/30/25-07-30---today-i-added/","title":"25-07-30 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/07/30/25-07-30---today-i-added/#td","title":"TD","text":"<p>LagCHOP</p> <p>Delete Samples Beginning End Of CHOP</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/07/31/25-07-31---today-i-added/","title":"25-07-31 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/07/31/25-07-31---today-i-added/#vvvv","title":"VVVV","text":"<p>Replace Multiple Slices in Spread With For Each</p> <p>Useful Learning Sources</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/07/31/25-07-31---today-i-learned/","title":"25-07-31 - Today I Learned...","text":"<p>A really important tool to use, especially when you work on bigger projects with multiple different functionality, write down each single small step that the flow of the program does.</p> <p>Also always directly test each functionality block so you don't end up knowing where the bug lies.</p> <p>See also General Programming Rules</p> <p>To force Dropbox to sync you can in the app click on pause sync and then resume sync. This can solve the problem that dropbox is not syncing your files properly.</p> <p>After I stepped away 4-5 hours from the project I just had one last look and solved the problem that took me 2 hours before.</p>","tags":["TIL","Programming","Dropbox"]},{"location":"blog/2025/08/01/25-08-01---today-i-added/","title":"25-08-01 - Today I Added...","text":"","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/08/01/25-08-01---today-i-added/#td","title":"TD","text":"<p>Animate Through Data Points Line Break Text in TextTOP</p>","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/08/01/25-08-01---today-i-added/#vvvv","title":"VVVV","text":"<p>Fade In, Hold, Fade Out Value Create Int2 from two single integers</p>","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/08/02/25-08-02---today-i-learned/","title":"25-08-02 - Today I Learned...","text":"<p>To detect if a <code>Bang</code> signal got true certain times in a time interval we can use a <code>CounterFlop</code>.</p>","tags":["TIL","VVVV"]},{"location":"blog/2025/08/05/25-08-05---today-i-added/","title":"25-08-05 - Today I Added...","text":"","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/08/05/25-08-05---today-i-added/#td","title":"TD","text":"<p>Mouse Position To SOP Line</p>","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/08/05/25-08-05---today-i-added/#vvvv","title":"VVVV","text":"<p>Toggle ImGUI Window on DoubleClick</p>","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/08/06/25-08-06---today-i-added/","title":"25-08-06 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/06/25-08-06---today-i-added/#vvvv","title":"VVVV","text":"<p>Extract Single Value From 2D.Rectangle Datatype</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/07/25-08-07---today-i-added/","title":"25-08-07 - Today I Added...","text":"","tags":["NewEntries","TIA","Unity","VVVV","TD"]},{"location":"blog/2025/08/07/25-08-07---today-i-added/#td","title":"TD","text":"<p>Access return values from custom function</p> <p>Delete Group From CopySOP</p> <p>Set Slider Value Via Script</p>","tags":["NewEntries","TIA","Unity","VVVV","TD"]},{"location":"blog/2025/08/07/25-08-07---today-i-added/#unity","title":"Unity","text":"<p>Turn AR Session ON or Off</p>","tags":["NewEntries","TIA","Unity","VVVV","TD"]},{"location":"blog/2025/08/07/25-08-07---today-i-added/#vvvv","title":"VVVV","text":"<p>Extract Single Value From 2D.Rectangle Datatype</p>","tags":["NewEntries","TIA","Unity","VVVV","TD"]},{"location":"blog/2025/08/08/25-08-08---today-i-added/","title":"25-08-08 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/08/25-08-08---today-i-added/#vvvv","title":"VVVV","text":"<p>Holding Last Changed Value</p> <p>Simple Audio Reactive Setup </p> <p>Wrap Value At Maximum Value with MOD</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/11/25-08-11---today-i-added/","title":"25-08-11 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/08/11/25-08-11---today-i-added/#td","title":"TD","text":"<p>Displace Copied LineSOP By Force</p>","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/08/11/25-08-11---today-i-added/#vvvv","title":"VVVV","text":"<p>From Random Value To Random Color</p> <p>Random Order of Elements in Spread</p> <p>Async</p> <p>Creating Own Dependency</p>","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/08/11/25-08-11--today-i-learned/","title":"25-08-11- Today I Learned...","text":"<p>To get a Vector3 from a Vector2 we can use <code>XYz</code>, <code>xYY</code>, ... nodes. The small letter will be the individual input.</p> <p>We can use the <code>Resize(VL.OpenCV)</code> node to make video input smaller. This increases performance for image and video processing. </p>","tags":["TIL","VVVV"]},{"location":"blog/2025/08/12/25-08-12---today-i-added/","title":"25-08-12 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/08/12/25-08-12---today-i-added/#td","title":"TD","text":"<p>MovieFileInTOP</p> <p>Convert 2D Image into 3D Shape</p> <p>Join Values In F-String</p> <p>Logging FPS</p>","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/08/12/25-08-12---today-i-added/#vvvv","title":"VVVV","text":"<p>Very Slow Texture Blend</p>","tags":["NewEntries","TIA","VVVV","TD"]},{"location":"blog/2025/08/12/25-08-12--today-i-learned/","title":"25-08-12- Today I Learned...","text":"<p>If you only want to apply the noise to X and Z axis we can use <code>*(Scale)</code> node and then set the axis we want to transform to 1.0 and the ignored one to 0.0.</p>","tags":["TIL","VVVV"]},{"location":"blog/2025/08/13/25-08-13---today-i-added/","title":"25-08-13 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/13/25-08-13---today-i-added/#td","title":"TD","text":"<p>Particles Move Back To Source Shape</p> <p>Merge Lines Into Surface</p> <p>Get Value of Current Momentary Button</p> <p>Combine String To Operator Name</p> <p>Scripting Cheatsheet</p> <p>Avoid Sensor Data Leaving Area</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/14/25-08-14---today-i-added/","title":"25-08-14 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/14/25-08-14---today-i-added/#vvvv","title":"VVVV","text":"<p>Avoid Animating Mesh Parameters</p> <p>Draw Normals Of Mesh</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/14/25-08-14---today-i-added/#td","title":"TD","text":"<p>Big Edges Displace Effect</p> <p>Glas Like Displace FX</p> <p>Switch Between CHOPs</p> <p>Convert Table Data Into CHOP</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/15/25-08-15---today-i-added/","title":"25-08-15 - Today I Added...","text":"","tags":["NewEntries","TIA","TD","ART","VVVV"]},{"location":"blog/2025/08/15/25-08-15---today-i-added/#td","title":"TD","text":"<p>Point Sprite Particle System</p> <p>Sample Pixel Values From TOP For Data</p>","tags":["NewEntries","TIA","TD","ART","VVVV"]},{"location":"blog/2025/08/15/25-08-15---today-i-added/#art","title":"Art","text":"<p>Artist for inspiration</p>","tags":["NewEntries","TIA","TD","ART","VVVV"]},{"location":"blog/2025/08/15/25-08-15---today-i-added/#vvvv","title":"VVVV","text":"<p>Simple Skia Feedback Effect</p> <p>Create ascending value</p>","tags":["NewEntries","TIA","TD","ART","VVVV"]},{"location":"blog/2025/08/15/25-08-15--today-i-learned/","title":"25-08-15- Today I Learned...","text":"","tags":["TIL","TD"]},{"location":"blog/2025/08/15/25-08-15--today-i-learned/#td-and-stream-diffusion","title":"TD and Stream Diffusion","text":"<p>In TouchDesigner Stream diffusion the <code>Step</code> parameter defines how close the output is to the original input. The higher the step value the closer it tries to go towards the orginal input.</p> <p>If you want something really abstract you want values between 10-15</p> <p>Also using a Feedback as the input for Stream Diffusion makes the transition smoother.</p> <p>If you add some noise as background or multiply your input into sd with noise you get more detail. If you animate the noise it keeps the output moving a bit all the time.</p>","tags":["TIL","TD"]},{"location":"blog/2025/08/15/25-08-15--today-i-learned/#td-and-feedback-loop","title":"TD and Feedback Loop","text":"<p>Always try your feedback loops with 16bit or 32bit so your feedback comes back to true black after time.</p>","tags":["TIL","TD"]},{"location":"blog/2025/08/15/25-08-15--today-i-learned/#td-panel","title":"TD Panel","text":"<p>If you have multiple radio buttons inside a component and you want to access the current value of the radio value via scripting you can use <code>op('parentName').panel.radio</code></p>","tags":["TIL","TD"]},{"location":"blog/2025/08/19/25-08-19---today-i-added/","title":"25-08-19 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/19/25-08-19---today-i-added/#td","title":"TD","text":"<p>Import Specific Geo From FBX</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/19/25-08-19---today-i-added/#vvvv","title":"VVVV","text":"<p>Useful Libraries</p> <p>Trigger Bool event every x seconds</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/20/25-08-20---today-i-added/","title":"25-08-20 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/20/25-08-20---today-i-added/#td","title":"TD","text":"<p>Swap Columns in TableDAT</p> <p>Detect How Fast Value Changes</p> <p>Convert TOP data to Channel Data</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/20/25-08-20---today-i-learned/","title":"25-08-20 - Today I Learned...","text":"<p>To convert all .mkv videos in a folder with the terminal and reduce there size <pre><code>Get-ChildItem *.mkv | ForEach-Object { ffmpeg -i $_.Name -vf \"scale=-2:1080\" -c:v libx264 -crf 23 -c:a aac ($_.BaseName + \".mp4\") }\n</code></pre></p>","tags":["ffmpeq","Terminal"]},{"location":"blog/2025/08/21/25-08-21---today-i-added/","title":"25-08-21 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/21/25-08-21---today-i-added/#td","title":"TD","text":"<p>Only Track Mouse Values In Window</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/22/25-08-22---today-i-added/","title":"25-08-22 - Today I Added...","text":"","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/22/25-08-22---today-i-added/#td","title":"TD","text":"<p>One Output From Trigger LogicCHOP</p> <p>Distribute Points At Random Position</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/22/25-08-22---today-i-added/#vvvv","title":"VVVV","text":"<p>Store Texture In Queue</p> <p>Count On MouseClick</p> <p>Round Float To Digits</p>","tags":["NewEntries","TIA","VVVV"]},{"location":"blog/2025/08/22/25-08-22---today-i-learned/","title":"25-08-22 - Today I Learned...","text":"","tags":["VVVV"]},{"location":"blog/2025/08/22/25-08-22---today-i-learned/#vvvv","title":"VVVV","text":"<p>OpenCV Contours expects a grayscale image and a <code>&lt;</code> Filter.</p> <p>The <code>Resize(OpenCV)</code> node allows you to scale the image.</p> <p>If you want to play bigger videos for VJing you should use <code>HAP</code> video format.  We can play them with the <code>VL.Happlayer</code> package.</p> <p><code>ConvexHull</code>detects only the most outer points </p>","tags":["VVVV"]},{"location":"blog/2025/08/26/25-08-26---today-i-added/","title":"25-08-26 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/26/25-08-26---today-i-added/#td","title":"TD","text":"<p>Rotate Camera On Path</p> <p>Combining Channels in PatternCHOP</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/26/25-08-26---today-i-learned/","title":"25-08-26 - Today I Learned...","text":"","tags":["VVVV"]},{"location":"blog/2025/08/26/25-08-26---today-i-learned/#vvvv","title":"VVVV","text":"<p>The <code>Splicer</code> slices out spreads into individual slices.</p> <p>The <code>Flatten</code> node allows to convert the structure of <code>Spread&lt;Spread&lt;DataType&gt;&gt;</code> into a <code>Spread&lt;DataType&gt;</code>. This allows us then to use the collection in a simple <code>ForEach</code> loop.</p> <p>To debug VVVV patches via Visual Studio we can open the program with right click on the VVVV logo - settings and add -debug at target.</p> <p>Then open new visual studio project - Debug -&gt; attach to process - select VVVV. We then can use <code>Throw</code> node to throw an error and <code>Break</code> to create breakpoints inside Visual Studio.</p> <p>Detach All in Visual Studio gives you control of the patch.</p>","tags":["VVVV"]},{"location":"blog/2025/08/26/25-08-26---today-i-learned/#ffmpeg","title":"FFmpeg","text":"<p>To convert .m4a into .wav <code>ffmpeg -i input.m4a output.wav</code></p>","tags":["VVVV"]},{"location":"blog/2025/09/01/25-09-01---today-i-added/","title":"25-09-01 - Today I Added...","text":"","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/09/01/25-09-01---today-i-added/#td","title":"TD","text":"<p>Reference Button Names From Table</p>","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/09/01/25-09-01---today-i-added/#vvvv","title":"VVVV","text":"<p>Animate Between Colors With Smoothstep</p> <p>Randomize Seed Of Randomspread</p>","tags":["NewEntries","TIA","TD","VVVV"]},{"location":"blog/2025/09/11/25-09-11---today-i-added/","title":"25-09-11 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/09/11/25-09-11---today-i-added/#td","title":"TD","text":"<p>Replace specific Values in DAT</p> <p>Set Log Flag Operator</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/09/12/25-09-12---today-i-added/","title":"25-09-12 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/09/12/25-09-12---today-i-added/#td","title":"TD","text":"<p>Output Transparent Video</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/09/12/25-09-12---today-i-learned/","title":"25-09-12 - Today I Learned...","text":"","tags":["TD","GLSL"]},{"location":"blog/2025/09/12/25-09-12---today-i-learned/#td","title":"TD","text":"","tags":["TD","GLSL"]},{"location":"blog/2025/09/12/25-09-12---today-i-learned/#performance","title":"Performance","text":"<p>When your touchdesigner patch only runs at 30 FPS, but the FPS settings in the patch are 60, it can be limited by the framerate of the output screen. </p>","tags":["TD","GLSL"]},{"location":"blog/2025/09/12/25-09-12---today-i-learned/#glsl","title":"GLSL","text":"<p>To make sure that a top never has certain pixel value you can use GLSL to test if pixel value has certain value and if it has change the color a bit.</p> <p>Download File Here</p>","tags":["TD","GLSL"]},{"location":"blog/2025/09/12/25-09-12---today-i-learned/#ip-adress-of-machine","title":"Ip adress of machine","text":"<p>Open terminal -&gt; <code>ipconfig</code></p>","tags":["TD","GLSL"]},{"location":"blog/2025/09/16/25-09-16---today-i-added/","title":"25-09-16 - Today I Added...","text":"","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/09/16/25-09-16---today-i-added/#td","title":"TD","text":"<p>Add Channels after each other into a Sequence</p> <p>Hold last changed value</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/09/16/25-09-16---today-i-added/#vvvv","title":"VVVV","text":"<p>Smooth jittery input data</p>","tags":["NewEntries","TIA","TD"]},{"location":"blog/2025/08/22/25-08-22---today-i-learned/","title":"25-08-22 - Today I Learned...","text":"","tags":["TD","MediaPipe"]},{"location":"blog/2025/08/22/25-08-22---today-i-learned/#td","title":"TD","text":"<p>If you want to run a python command in an execute with a delay we can use <code>run('op(\"opname\").par.resetpulse.pulse()',delayFrames=180)</code></p>","tags":["TD","MediaPipe"]},{"location":"blog/2025/08/22/25-08-22---today-i-learned/#spoutcam","title":"SpoutCam","text":"<p>We can use SpoutCam to flip the camera to use it flipped in MediaPipe. That also allows us to crop our camera image in TD and send it different image a virtual camera input into mediapipe</p>","tags":["TD","MediaPipe"]},{"location":"blog/2025/08/22/25-08-22---today-i-learned/#mediapipe","title":"MediaPipe","text":"<p>If you only want to track a certain area you can</p>","tags":["TD","MediaPipe"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/tia/","title":"TIA","text":""},{"location":"blog/category/newentries/","title":"NewEntries","text":""},{"location":"blog/category/td/","title":"TD","text":""},{"location":"blog/category/glsl/","title":"GLSL","text":""},{"location":"blog/category/vvvv/","title":"VVVV","text":""},{"location":"blog/category/mediapipe/","title":"MediaPipe","text":""},{"location":"blog/category/ffmpeq/","title":"ffmpeq","text":""},{"location":"blog/category/terminal/","title":"Terminal","text":""},{"location":"blog/category/art/","title":"ART","text":""},{"location":"blog/category/til/","title":"TIL","text":""},{"location":"blog/category/unity/","title":"Unity","text":""},{"location":"blog/category/programming/","title":"Programming","text":""},{"location":"blog/category/python/","title":"PYTHON","text":""},{"location":"blog/category/tic/","title":"TIC","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"blog/page/3/","title":"Blog","text":""},{"location":"blog/page/4/","title":"Blog","text":""},{"location":"blog/page/5/","title":"Blog","text":""},{"location":"blog/archive/2025/page/2/","title":"2025","text":""},{"location":"blog/archive/2025/page/3/","title":"2025","text":""},{"location":"blog/archive/2025/page/4/","title":"2025","text":""},{"location":"blog/archive/2025/page/5/","title":"2025","text":""},{"location":"blog/category/newentries/page/2/","title":"NewEntries","text":""},{"location":"blog/category/newentries/page/3/","title":"NewEntries","text":""},{"location":"blog/category/td/page/2/","title":"TD","text":""},{"location":"blog/category/td/page/3/","title":"TD","text":""},{"location":"blog/category/tia/page/2/","title":"TIA","text":""},{"location":"blog/category/tia/page/3/","title":"TIA","text":""},{"location":"blog/category/til/page/2/","title":"TIL","text":""},{"location":"blog/category/vvvv/page/2/","title":"VVVV","text":""},{"location":"blog/category/vvvv/page/3/","title":"VVVV","text":""}]}